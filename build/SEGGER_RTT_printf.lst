ARM GAS  C:\Users\alronman\AppData\Local\Temp\ccOnPspb.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"SEGGER_RTT_printf.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._StoreChar,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_StoreChar:
  26              	.LVL0:
  27              	.LFB0:
  28              		.file 1 "RTT/SEGGER_RTT_printf.c"
   1:RTT/SEGGER_RTT_printf.c **** /*********************************************************************
   2:RTT/SEGGER_RTT_printf.c **** *                    SEGGER Microcontroller GmbH                     *
   3:RTT/SEGGER_RTT_printf.c **** *                        The Embedded Experts                        *
   4:RTT/SEGGER_RTT_printf.c **** **********************************************************************
   5:RTT/SEGGER_RTT_printf.c **** *                                                                    *
   6:RTT/SEGGER_RTT_printf.c **** *            (c) 1995 - 2018 SEGGER Microcontroller GmbH             *
   7:RTT/SEGGER_RTT_printf.c **** *                                                                    *
   8:RTT/SEGGER_RTT_printf.c **** *       www.segger.com     Support: support@segger.com               *
   9:RTT/SEGGER_RTT_printf.c **** *                                                                    *
  10:RTT/SEGGER_RTT_printf.c **** **********************************************************************
  11:RTT/SEGGER_RTT_printf.c **** *                                                                    *
  12:RTT/SEGGER_RTT_printf.c **** *       SEGGER RTT * Real Time Transfer for embedded targets         *
  13:RTT/SEGGER_RTT_printf.c **** *                                                                    *
  14:RTT/SEGGER_RTT_printf.c **** **********************************************************************
  15:RTT/SEGGER_RTT_printf.c **** *                                                                    *
  16:RTT/SEGGER_RTT_printf.c **** * All rights reserved.                                               *
  17:RTT/SEGGER_RTT_printf.c **** *                                                                    *
  18:RTT/SEGGER_RTT_printf.c **** * SEGGER strongly recommends to not make any changes                 *
  19:RTT/SEGGER_RTT_printf.c **** * to or modify the source code of this software in order to stay     *
  20:RTT/SEGGER_RTT_printf.c **** * compatible with the RTT protocol and J-Link.                       *
  21:RTT/SEGGER_RTT_printf.c **** *                                                                    *
  22:RTT/SEGGER_RTT_printf.c **** * Redistribution and use in source and binary forms, with or         *
  23:RTT/SEGGER_RTT_printf.c **** * without modification, are permitted provided that the following    *
  24:RTT/SEGGER_RTT_printf.c **** * conditions are met:                                                *
  25:RTT/SEGGER_RTT_printf.c **** *                                                                    *
  26:RTT/SEGGER_RTT_printf.c **** * o Redistributions of source code must retain the above copyright   *
  27:RTT/SEGGER_RTT_printf.c **** *   notice, this list of conditions and the following disclaimer.    *
  28:RTT/SEGGER_RTT_printf.c **** *                                                                    *
  29:RTT/SEGGER_RTT_printf.c **** * o Redistributions in binary form must reproduce the above          *
  30:RTT/SEGGER_RTT_printf.c **** *   copyright notice, this list of conditions and the following      *
ARM GAS  C:\Users\alronman\AppData\Local\Temp\ccOnPspb.s 			page 2


  31:RTT/SEGGER_RTT_printf.c **** *   disclaimer in the documentation and/or other materials provided  *
  32:RTT/SEGGER_RTT_printf.c **** *   with the distribution.                                           *
  33:RTT/SEGGER_RTT_printf.c **** *                                                                    *
  34:RTT/SEGGER_RTT_printf.c **** * o Neither the name of SEGGER Microcontroller GmbH         *
  35:RTT/SEGGER_RTT_printf.c **** *   nor the names of its contributors may be used to endorse or      *
  36:RTT/SEGGER_RTT_printf.c **** *   promote products derived from this software without specific     *
  37:RTT/SEGGER_RTT_printf.c **** *   prior written permission.                                        *
  38:RTT/SEGGER_RTT_printf.c **** *                                                                    *
  39:RTT/SEGGER_RTT_printf.c **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND             *
  40:RTT/SEGGER_RTT_printf.c **** * CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,        *
  41:RTT/SEGGER_RTT_printf.c **** * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF           *
  42:RTT/SEGGER_RTT_printf.c **** * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE           *
  43:RTT/SEGGER_RTT_printf.c **** * DISCLAIMED. IN NO EVENT SHALL SEGGER Microcontroller BE LIABLE FOR *
  44:RTT/SEGGER_RTT_printf.c **** * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR           *
  45:RTT/SEGGER_RTT_printf.c **** * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT  *
  46:RTT/SEGGER_RTT_printf.c **** * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;    *
  47:RTT/SEGGER_RTT_printf.c **** * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF      *
  48:RTT/SEGGER_RTT_printf.c **** * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT          *
  49:RTT/SEGGER_RTT_printf.c **** * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE  *
  50:RTT/SEGGER_RTT_printf.c **** * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH   *
  51:RTT/SEGGER_RTT_printf.c **** * DAMAGE.                                                            *
  52:RTT/SEGGER_RTT_printf.c **** *                                                                    *
  53:RTT/SEGGER_RTT_printf.c **** **********************************************************************
  54:RTT/SEGGER_RTT_printf.c **** *                                                                    *
  55:RTT/SEGGER_RTT_printf.c **** *       RTT version: 6.34                                           *
  56:RTT/SEGGER_RTT_printf.c **** *                                                                    *
  57:RTT/SEGGER_RTT_printf.c **** **********************************************************************
  58:RTT/SEGGER_RTT_printf.c **** ---------------------------END-OF-HEADER------------------------------
  59:RTT/SEGGER_RTT_printf.c **** File    : SEGGER_RTT_printf.c
  60:RTT/SEGGER_RTT_printf.c **** Purpose : Replacement for printf to write formatted data via RTT
  61:RTT/SEGGER_RTT_printf.c **** Revision: $Rev: 9599 $
  62:RTT/SEGGER_RTT_printf.c **** ----------------------------------------------------------------------
  63:RTT/SEGGER_RTT_printf.c **** */
  64:RTT/SEGGER_RTT_printf.c **** #include "SEGGER_RTT.h"
  65:RTT/SEGGER_RTT_printf.c **** #include "SEGGER_RTT_Conf.h"
  66:RTT/SEGGER_RTT_printf.c **** 
  67:RTT/SEGGER_RTT_printf.c **** /*********************************************************************
  68:RTT/SEGGER_RTT_printf.c **** *
  69:RTT/SEGGER_RTT_printf.c **** *       Defines, configurable
  70:RTT/SEGGER_RTT_printf.c **** *
  71:RTT/SEGGER_RTT_printf.c **** **********************************************************************
  72:RTT/SEGGER_RTT_printf.c **** */
  73:RTT/SEGGER_RTT_printf.c **** 
  74:RTT/SEGGER_RTT_printf.c **** #ifndef SEGGER_RTT_PRINTF_BUFFER_SIZE
  75:RTT/SEGGER_RTT_printf.c ****   #define SEGGER_RTT_PRINTF_BUFFER_SIZE (64)
  76:RTT/SEGGER_RTT_printf.c **** #endif
  77:RTT/SEGGER_RTT_printf.c **** 
  78:RTT/SEGGER_RTT_printf.c **** #include <stdlib.h>
  79:RTT/SEGGER_RTT_printf.c **** #include <stdarg.h>
  80:RTT/SEGGER_RTT_printf.c **** 
  81:RTT/SEGGER_RTT_printf.c **** 
  82:RTT/SEGGER_RTT_printf.c **** #define FORMAT_FLAG_LEFT_JUSTIFY   (1u << 0)
  83:RTT/SEGGER_RTT_printf.c **** #define FORMAT_FLAG_PAD_ZERO       (1u << 1)
  84:RTT/SEGGER_RTT_printf.c **** #define FORMAT_FLAG_PRINT_SIGN     (1u << 2)
  85:RTT/SEGGER_RTT_printf.c **** #define FORMAT_FLAG_ALTERNATE      (1u << 3)
  86:RTT/SEGGER_RTT_printf.c **** 
  87:RTT/SEGGER_RTT_printf.c **** /*********************************************************************
ARM GAS  C:\Users\alronman\AppData\Local\Temp\ccOnPspb.s 			page 3


  88:RTT/SEGGER_RTT_printf.c **** *
  89:RTT/SEGGER_RTT_printf.c **** *       Types
  90:RTT/SEGGER_RTT_printf.c **** *
  91:RTT/SEGGER_RTT_printf.c **** **********************************************************************
  92:RTT/SEGGER_RTT_printf.c **** */
  93:RTT/SEGGER_RTT_printf.c **** 
  94:RTT/SEGGER_RTT_printf.c **** typedef struct {
  95:RTT/SEGGER_RTT_printf.c ****   char*     pBuffer;
  96:RTT/SEGGER_RTT_printf.c ****   unsigned  BufferSize;
  97:RTT/SEGGER_RTT_printf.c ****   unsigned  Cnt;
  98:RTT/SEGGER_RTT_printf.c **** 
  99:RTT/SEGGER_RTT_printf.c ****   int   ReturnValue;
 100:RTT/SEGGER_RTT_printf.c **** 
 101:RTT/SEGGER_RTT_printf.c ****   unsigned RTTBufferIndex;
 102:RTT/SEGGER_RTT_printf.c **** } SEGGER_RTT_PRINTF_DESC;
 103:RTT/SEGGER_RTT_printf.c **** 
 104:RTT/SEGGER_RTT_printf.c **** /*********************************************************************
 105:RTT/SEGGER_RTT_printf.c **** *
 106:RTT/SEGGER_RTT_printf.c **** *       Function prototypes
 107:RTT/SEGGER_RTT_printf.c **** *
 108:RTT/SEGGER_RTT_printf.c **** **********************************************************************
 109:RTT/SEGGER_RTT_printf.c **** */
 110:RTT/SEGGER_RTT_printf.c **** int SEGGER_RTT_vprintf(unsigned BufferIndex, const char * sFormat, va_list * pParamList);
 111:RTT/SEGGER_RTT_printf.c **** 
 112:RTT/SEGGER_RTT_printf.c **** /*********************************************************************
 113:RTT/SEGGER_RTT_printf.c **** *
 114:RTT/SEGGER_RTT_printf.c **** *       Static code
 115:RTT/SEGGER_RTT_printf.c **** *
 116:RTT/SEGGER_RTT_printf.c **** **********************************************************************
 117:RTT/SEGGER_RTT_printf.c **** */
 118:RTT/SEGGER_RTT_printf.c **** /*********************************************************************
 119:RTT/SEGGER_RTT_printf.c **** *
 120:RTT/SEGGER_RTT_printf.c **** *       _StoreChar
 121:RTT/SEGGER_RTT_printf.c **** */
 122:RTT/SEGGER_RTT_printf.c **** static void _StoreChar(SEGGER_RTT_PRINTF_DESC * p, char c) {
  29              		.loc 1 122 60 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 122 60 is_stmt 0 view .LVU1
  34 0000 10B5     		push	{r4, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 4, -8
  38              		.cfi_offset 14, -4
  39 0002 0446     		mov	r4, r0
 123:RTT/SEGGER_RTT_printf.c ****   unsigned Cnt;
  40              		.loc 1 123 3 is_stmt 1 view .LVU2
 124:RTT/SEGGER_RTT_printf.c **** 
 125:RTT/SEGGER_RTT_printf.c ****   Cnt = p->Cnt;
  41              		.loc 1 125 3 view .LVU3
  42              		.loc 1 125 7 is_stmt 0 view .LVU4
  43 0004 8268     		ldr	r2, [r0, #8]
  44              	.LVL1:
 126:RTT/SEGGER_RTT_printf.c ****   if ((Cnt + 1u) <= p->BufferSize) {
  45              		.loc 1 126 3 is_stmt 1 view .LVU5
  46              		.loc 1 126 12 is_stmt 0 view .LVU6
ARM GAS  C:\Users\alronman\AppData\Local\Temp\ccOnPspb.s 			page 4


  47 0006 531C     		adds	r3, r2, #1
  48              		.loc 1 126 22 view .LVU7
  49 0008 4068     		ldr	r0, [r0, #4]
  50              	.LVL2:
  51              		.loc 1 126 6 view .LVU8
  52 000a 8342     		cmp	r3, r0
  53 000c 05D8     		bhi	.L2
 127:RTT/SEGGER_RTT_printf.c ****     *(p->pBuffer + Cnt) = c;
  54              		.loc 1 127 5 is_stmt 1 view .LVU9
  55              		.loc 1 127 8 is_stmt 0 view .LVU10
  56 000e 2068     		ldr	r0, [r4]
  57              		.loc 1 127 25 view .LVU11
  58 0010 8154     		strb	r1, [r0, r2]
 128:RTT/SEGGER_RTT_printf.c ****     p->Cnt = Cnt + 1u;
  59              		.loc 1 128 5 is_stmt 1 view .LVU12
  60              		.loc 1 128 12 is_stmt 0 view .LVU13
  61 0012 A360     		str	r3, [r4, #8]
 129:RTT/SEGGER_RTT_printf.c ****     p->ReturnValue++;
  62              		.loc 1 129 5 is_stmt 1 view .LVU14
  63              		.loc 1 129 6 is_stmt 0 view .LVU15
  64 0014 E368     		ldr	r3, [r4, #12]
  65              		.loc 1 129 19 view .LVU16
  66 0016 0133     		adds	r3, r3, #1
  67 0018 E360     		str	r3, [r4, #12]
  68              	.L2:
 130:RTT/SEGGER_RTT_printf.c ****   }
 131:RTT/SEGGER_RTT_printf.c ****   //
 132:RTT/SEGGER_RTT_printf.c ****   // Write part of string, when the buffer is full
 133:RTT/SEGGER_RTT_printf.c ****   //
 134:RTT/SEGGER_RTT_printf.c ****   if (p->Cnt == p->BufferSize) {
  69              		.loc 1 134 3 is_stmt 1 view .LVU17
  70              		.loc 1 134 8 is_stmt 0 view .LVU18
  71 001a A268     		ldr	r2, [r4, #8]
  72              	.LVL3:
  73              		.loc 1 134 18 view .LVU19
  74 001c 6368     		ldr	r3, [r4, #4]
  75              		.loc 1 134 6 view .LVU20
  76 001e 9A42     		cmp	r2, r3
  77 0020 00D0     		beq	.L6
  78              	.LVL4:
  79              	.L1:
 135:RTT/SEGGER_RTT_printf.c ****     if (SEGGER_RTT_Write(p->RTTBufferIndex, p->pBuffer, p->Cnt) != p->Cnt) {
 136:RTT/SEGGER_RTT_printf.c ****       p->ReturnValue = -1;
 137:RTT/SEGGER_RTT_printf.c ****     } else {
 138:RTT/SEGGER_RTT_printf.c ****       p->Cnt = 0u;
 139:RTT/SEGGER_RTT_printf.c ****     }
 140:RTT/SEGGER_RTT_printf.c ****   }
 141:RTT/SEGGER_RTT_printf.c **** }
  80              		.loc 1 141 1 view .LVU21
  81 0022 10BD     		pop	{r4, pc}
  82              	.LVL5:
  83              	.L6:
 135:RTT/SEGGER_RTT_printf.c ****     if (SEGGER_RTT_Write(p->RTTBufferIndex, p->pBuffer, p->Cnt) != p->Cnt) {
  84              		.loc 1 135 5 is_stmt 1 view .LVU22
 135:RTT/SEGGER_RTT_printf.c ****     if (SEGGER_RTT_Write(p->RTTBufferIndex, p->pBuffer, p->Cnt) != p->Cnt) {
  85              		.loc 1 135 9 is_stmt 0 view .LVU23
  86 0024 2168     		ldr	r1, [r4]
ARM GAS  C:\Users\alronman\AppData\Local\Temp\ccOnPspb.s 			page 5


  87              	.LVL6:
 135:RTT/SEGGER_RTT_printf.c ****     if (SEGGER_RTT_Write(p->RTTBufferIndex, p->pBuffer, p->Cnt) != p->Cnt) {
  88              		.loc 1 135 9 view .LVU24
  89 0026 2069     		ldr	r0, [r4, #16]
  90 0028 FFF7FEFF 		bl	SEGGER_RTT_Write
  91              	.LVL7:
 135:RTT/SEGGER_RTT_printf.c ****     if (SEGGER_RTT_Write(p->RTTBufferIndex, p->pBuffer, p->Cnt) != p->Cnt) {
  92              		.loc 1 135 69 view .LVU25
  93 002c A368     		ldr	r3, [r4, #8]
 135:RTT/SEGGER_RTT_printf.c ****     if (SEGGER_RTT_Write(p->RTTBufferIndex, p->pBuffer, p->Cnt) != p->Cnt) {
  94              		.loc 1 135 8 view .LVU26
  95 002e 9842     		cmp	r0, r3
  96 0030 03D0     		beq	.L4
 136:RTT/SEGGER_RTT_printf.c ****     } else {
  97              		.loc 1 136 7 is_stmt 1 view .LVU27
 136:RTT/SEGGER_RTT_printf.c ****     } else {
  98              		.loc 1 136 22 is_stmt 0 view .LVU28
  99 0032 4FF0FF33 		mov	r3, #-1
 100 0036 E360     		str	r3, [r4, #12]
 101 0038 F3E7     		b	.L1
 102              	.L4:
 138:RTT/SEGGER_RTT_printf.c ****     }
 103              		.loc 1 138 7 is_stmt 1 view .LVU29
 138:RTT/SEGGER_RTT_printf.c ****     }
 104              		.loc 1 138 14 is_stmt 0 view .LVU30
 105 003a 0023     		movs	r3, #0
 106 003c A360     		str	r3, [r4, #8]
 107              		.loc 1 141 1 view .LVU31
 108 003e F0E7     		b	.L1
 109              		.cfi_endproc
 110              	.LFE0:
 112              		.section	.text._PrintUnsigned,"ax",%progbits
 113              		.align	1
 114              		.syntax unified
 115              		.thumb
 116              		.thumb_func
 117              		.fpu fpv4-sp-d16
 119              	_PrintUnsigned:
 120              	.LVL8:
 121              	.LFB1:
 142:RTT/SEGGER_RTT_printf.c **** 
 143:RTT/SEGGER_RTT_printf.c **** /*********************************************************************
 144:RTT/SEGGER_RTT_printf.c **** *
 145:RTT/SEGGER_RTT_printf.c **** *       _PrintUnsigned
 146:RTT/SEGGER_RTT_printf.c **** */
 147:RTT/SEGGER_RTT_printf.c **** static void _PrintUnsigned(SEGGER_RTT_PRINTF_DESC * pBufferDesc, unsigned v, unsigned Base, unsigne
 122              		.loc 1 147 156 is_stmt 1 view -0
 123              		.cfi_startproc
 124              		@ args = 8, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              		.loc 1 147 156 is_stmt 0 view .LVU33
 127 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 128              	.LCFI1:
 129              		.cfi_def_cfa_offset 40
 130              		.cfi_offset 3, -40
 131              		.cfi_offset 4, -36
 132              		.cfi_offset 5, -32
ARM GAS  C:\Users\alronman\AppData\Local\Temp\ccOnPspb.s 			page 6


 133              		.cfi_offset 6, -28
 134              		.cfi_offset 7, -24
 135              		.cfi_offset 8, -20
 136              		.cfi_offset 9, -16
 137              		.cfi_offset 10, -12
 138              		.cfi_offset 11, -8
 139              		.cfi_offset 14, -4
 140 0004 8146     		mov	r9, r0
 141 0006 0F46     		mov	r7, r1
 142 0008 1546     		mov	r5, r2
 143 000a 1E46     		mov	r6, r3
 144 000c DDF828A0 		ldr	r10, [sp, #40]
 145 0010 0B9A     		ldr	r2, [sp, #44]
 146              	.LVL9:
 148:RTT/SEGGER_RTT_printf.c ****   static const char _aV2C[16] = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', '
 147              		.loc 1 148 3 is_stmt 1 view .LVU34
 149:RTT/SEGGER_RTT_printf.c ****   unsigned Div;
 148              		.loc 1 149 3 view .LVU35
 150:RTT/SEGGER_RTT_printf.c ****   unsigned Digit;
 149              		.loc 1 150 3 view .LVU36
 151:RTT/SEGGER_RTT_printf.c ****   unsigned Number;
 150              		.loc 1 151 3 view .LVU37
 152:RTT/SEGGER_RTT_printf.c ****   unsigned Width;
 151              		.loc 1 152 3 view .LVU38
 153:RTT/SEGGER_RTT_printf.c ****   char c;
 152              		.loc 1 153 3 view .LVU39
 154:RTT/SEGGER_RTT_printf.c **** 
 155:RTT/SEGGER_RTT_printf.c ****   Number = v;
 153              		.loc 1 155 3 view .LVU40
 156:RTT/SEGGER_RTT_printf.c ****   Digit = 1u;
 154              		.loc 1 156 3 view .LVU41
 157:RTT/SEGGER_RTT_printf.c ****   //
 158:RTT/SEGGER_RTT_printf.c ****   // Get actual field width
 159:RTT/SEGGER_RTT_printf.c ****   //
 160:RTT/SEGGER_RTT_printf.c ****   Width = 1u;
 155              		.loc 1 160 3 view .LVU42
 161:RTT/SEGGER_RTT_printf.c ****   while (Number >= Base) {
 156              		.loc 1 161 3 view .LVU43
 155:RTT/SEGGER_RTT_printf.c ****   Digit = 1u;
 157              		.loc 1 155 10 is_stmt 0 view .LVU44
 158 0012 0B46     		mov	r3, r1
 159              	.LVL10:
 160:RTT/SEGGER_RTT_printf.c ****   while (Number >= Base) {
 160              		.loc 1 160 9 view .LVU45
 161 0014 4FF00108 		mov	r8, #1
 162              		.loc 1 161 9 view .LVU46
 163 0018 03E0     		b	.L8
 164              	.LVL11:
 165              	.L9:
 162:RTT/SEGGER_RTT_printf.c ****     Number = (Number / Base);
 166              		.loc 1 162 5 is_stmt 1 view .LVU47
 167              		.loc 1 162 12 is_stmt 0 view .LVU48
 168 001a B3FBF5F3 		udiv	r3, r3, r5
 169              	.LVL12:
 163:RTT/SEGGER_RTT_printf.c ****     Width++;
 170              		.loc 1 163 5 is_stmt 1 view .LVU49
 171              		.loc 1 163 10 is_stmt 0 view .LVU50
ARM GAS  C:\Users\alronman\AppData\Local\Temp\ccOnPspb.s 			page 7


 172 001e 08F10108 		add	r8, r8, #1
 173              	.LVL13:
 174              	.L8:
 161:RTT/SEGGER_RTT_printf.c ****     Number = (Number / Base);
 175              		.loc 1 161 9 is_stmt 1 view .LVU51
 176 0022 AB42     		cmp	r3, r5
 177 0024 F9D2     		bcs	.L9
 164:RTT/SEGGER_RTT_printf.c ****   }
 165:RTT/SEGGER_RTT_printf.c ****   if (NumDigits > Width) {
 178              		.loc 1 165 3 view .LVU52
 179              		.loc 1 165 6 is_stmt 0 view .LVU53
 180 0026 B045     		cmp	r8, r6
 181 0028 00D2     		bcs	.L10
 166:RTT/SEGGER_RTT_printf.c ****     Width = NumDigits;
 182              		.loc 1 166 11 view .LVU54
 183 002a B046     		mov	r8, r6
 184              	.LVL14:
 185              	.L10:
 167:RTT/SEGGER_RTT_printf.c ****   }
 168:RTT/SEGGER_RTT_printf.c ****   //
 169:RTT/SEGGER_RTT_printf.c ****   // Print leading chars if necessary
 170:RTT/SEGGER_RTT_printf.c ****   //
 171:RTT/SEGGER_RTT_printf.c ****   if ((FormatFlags & FORMAT_FLAG_LEFT_JUSTIFY) == 0u) {
 186              		.loc 1 171 3 is_stmt 1 view .LVU55
 187              		.loc 1 171 6 is_stmt 0 view .LVU56
 188 002c 12F0010B 		ands	fp, r2, #1
 189 0030 18D1     		bne	.L11
 172:RTT/SEGGER_RTT_printf.c ****     if (FieldWidth != 0u) {
 190              		.loc 1 172 5 is_stmt 1 view .LVU57
 191              		.loc 1 172 8 is_stmt 0 view .LVU58
 192 0032 BAF1000F 		cmp	r10, #0
 193 0036 15D0     		beq	.L11
 173:RTT/SEGGER_RTT_printf.c ****       if (((FormatFlags & FORMAT_FLAG_PAD_ZERO) == FORMAT_FLAG_PAD_ZERO) && (NumDigits == 0u)) {
 194              		.loc 1 173 7 is_stmt 1 view .LVU59
 195              		.loc 1 173 10 is_stmt 0 view .LVU60
 196 0038 12F0020F 		tst	r2, #2
 197 003c 02D0     		beq	.L24
 198              		.loc 1 173 74 discriminator 1 view .LVU61
 199 003e BEB1     		cbz	r6, .L25
 174:RTT/SEGGER_RTT_printf.c ****         c = '0';
 175:RTT/SEGGER_RTT_printf.c ****       } else {
 176:RTT/SEGGER_RTT_printf.c ****         c = ' ';
 200              		.loc 1 176 11 view .LVU62
 201 0040 2024     		movs	r4, #32
 202 0042 00E0     		b	.L13
 203              	.L24:
 204 0044 2024     		movs	r4, #32
 205              	.LVL15:
 206              	.L13:
 177:RTT/SEGGER_RTT_printf.c ****       }
 178:RTT/SEGGER_RTT_printf.c ****       while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 207              		.loc 1 178 13 is_stmt 1 view .LVU63
 208 0046 BAF1000F 		cmp	r10, #0
 209 004a 0BD0     		beq	.L11
 210              		.loc 1 178 33 is_stmt 0 discriminator 1 view .LVU64
 211 004c C245     		cmp	r10, r8
 212 004e 09D9     		bls	.L11
ARM GAS  C:\Users\alronman\AppData\Local\Temp\ccOnPspb.s 			page 8


 179:RTT/SEGGER_RTT_printf.c ****         FieldWidth--;
 213              		.loc 1 179 9 is_stmt 1 view .LVU65
 214              		.loc 1 179 19 is_stmt 0 view .LVU66
 215 0050 0AF1FF3A 		add	r10, r10, #-1
 216              	.LVL16:
 180:RTT/SEGGER_RTT_printf.c ****         _StoreChar(pBufferDesc, c);
 217              		.loc 1 180 9 is_stmt 1 view .LVU67
 218 0054 2146     		mov	r1, r4
 219 0056 4846     		mov	r0, r9
 220 0058 FFF7FEFF 		bl	_StoreChar
 221              	.LVL17:
 181:RTT/SEGGER_RTT_printf.c ****         if (pBufferDesc->ReturnValue < 0) {
 222              		.loc 1 181 9 view .LVU68
 223              		.loc 1 181 24 is_stmt 0 view .LVU69
 224 005c D9F80C30 		ldr	r3, [r9, #12]
 225              		.loc 1 181 12 view .LVU70
 226 0060 002B     		cmp	r3, #0
 227 0062 F0DA     		bge	.L13
 228              	.LVL18:
 229              	.L11:
 182:RTT/SEGGER_RTT_printf.c ****           break;
 183:RTT/SEGGER_RTT_printf.c ****         }
 184:RTT/SEGGER_RTT_printf.c ****       }
 185:RTT/SEGGER_RTT_printf.c ****     }
 186:RTT/SEGGER_RTT_printf.c ****   }
 187:RTT/SEGGER_RTT_printf.c ****   if (pBufferDesc->ReturnValue >= 0) {
 230              		.loc 1 187 3 is_stmt 1 view .LVU71
 231              		.loc 1 187 18 is_stmt 0 view .LVU72
 232 0064 D9F80C30 		ldr	r3, [r9, #12]
 233              		.loc 1 187 6 view .LVU73
 234 0068 002B     		cmp	r3, #0
 235 006a 25DB     		blt	.L7
 156:RTT/SEGGER_RTT_printf.c ****   //
 236              		.loc 1 156 9 view .LVU74
 237 006c 0124     		movs	r4, #1
 238 006e 04E0     		b	.L19
 239              	.LVL19:
 240              	.L25:
 174:RTT/SEGGER_RTT_printf.c ****       } else {
 241              		.loc 1 174 11 view .LVU75
 242 0070 3024     		movs	r4, #48
 243 0072 E8E7     		b	.L13
 244              	.LVL20:
 245              	.L28:
 188:RTT/SEGGER_RTT_printf.c ****     //
 189:RTT/SEGGER_RTT_printf.c ****     // Compute Digit.
 190:RTT/SEGGER_RTT_printf.c ****     // Loop until Digit has the value of the highest digit required.
 191:RTT/SEGGER_RTT_printf.c ****     // Example: If the output is 345 (Base 10), loop 2 times until Digit is 100.
 192:RTT/SEGGER_RTT_printf.c ****     //
 193:RTT/SEGGER_RTT_printf.c ****     while (1) {
 194:RTT/SEGGER_RTT_printf.c ****       if (NumDigits > 1u) {       // User specified a min number of digits to print? => Make sure w
 195:RTT/SEGGER_RTT_printf.c ****         NumDigits--;
 246              		.loc 1 195 9 is_stmt 1 view .LVU76
 247              		.loc 1 195 18 is_stmt 0 view .LVU77
 248 0074 013E     		subs	r6, r6, #1
 249              	.LVL21:
 250              	.L17:
ARM GAS  C:\Users\alronman\AppData\Local\Temp\ccOnPspb.s 			page 9


 196:RTT/SEGGER_RTT_printf.c ****       } else {
 197:RTT/SEGGER_RTT_printf.c ****         Div = v / Digit;
 198:RTT/SEGGER_RTT_printf.c ****         if (Div < Base) {        // Is our divider big enough to extract the highest digit from val
 199:RTT/SEGGER_RTT_printf.c ****           break;
 200:RTT/SEGGER_RTT_printf.c ****         }
 201:RTT/SEGGER_RTT_printf.c ****       }
 202:RTT/SEGGER_RTT_printf.c ****       Digit *= Base;
 251              		.loc 1 202 7 is_stmt 1 view .LVU78
 252              		.loc 1 202 13 is_stmt 0 view .LVU79
 253 0076 05FB04F4 		mul	r4, r5, r4
 254              	.LVL22:
 193:RTT/SEGGER_RTT_printf.c ****       if (NumDigits > 1u) {       // User specified a min number of digits to print? => Make sure w
 255              		.loc 1 193 11 is_stmt 1 view .LVU80
 256              	.L19:
 193:RTT/SEGGER_RTT_printf.c ****       if (NumDigits > 1u) {       // User specified a min number of digits to print? => Make sure w
 257              		.loc 1 193 5 view .LVU81
 194:RTT/SEGGER_RTT_printf.c ****         NumDigits--;
 258              		.loc 1 194 7 view .LVU82
 194:RTT/SEGGER_RTT_printf.c ****         NumDigits--;
 259              		.loc 1 194 10 is_stmt 0 view .LVU83
 260 007a 012E     		cmp	r6, #1
 261 007c FAD8     		bhi	.L28
 197:RTT/SEGGER_RTT_printf.c ****         if (Div < Base) {        // Is our divider big enough to extract the highest digit from val
 262              		.loc 1 197 9 is_stmt 1 view .LVU84
 197:RTT/SEGGER_RTT_printf.c ****         if (Div < Base) {        // Is our divider big enough to extract the highest digit from val
 263              		.loc 1 197 13 is_stmt 0 view .LVU85
 264 007e B7FBF4F3 		udiv	r3, r7, r4
 265              	.LVL23:
 198:RTT/SEGGER_RTT_printf.c ****           break;
 266              		.loc 1 198 9 is_stmt 1 view .LVU86
 198:RTT/SEGGER_RTT_printf.c ****           break;
 267              		.loc 1 198 12 is_stmt 0 view .LVU87
 268 0082 9D42     		cmp	r5, r3
 269 0084 F7D9     		bls	.L17
 270 0086 00E0     		b	.L18
 271              	.LVL24:
 272              	.L26:
 203:RTT/SEGGER_RTT_printf.c ****     }
 204:RTT/SEGGER_RTT_printf.c ****     //
 205:RTT/SEGGER_RTT_printf.c ****     // Output digits
 206:RTT/SEGGER_RTT_printf.c ****     //
 207:RTT/SEGGER_RTT_printf.c ****     do {
 208:RTT/SEGGER_RTT_printf.c ****       Div = v / Digit;
 209:RTT/SEGGER_RTT_printf.c ****       v -= Div * Digit;
 210:RTT/SEGGER_RTT_printf.c ****       _StoreChar(pBufferDesc, _aV2C[Div]);
 211:RTT/SEGGER_RTT_printf.c ****       if (pBufferDesc->ReturnValue < 0) {
 212:RTT/SEGGER_RTT_printf.c ****         break;
 213:RTT/SEGGER_RTT_printf.c ****       }
 214:RTT/SEGGER_RTT_printf.c ****       Digit /= Base;
 273              		.loc 1 214 13 view .LVU88
 274 0088 1C46     		mov	r4, r3
 275              	.LVL25:
 276              	.L18:
 207:RTT/SEGGER_RTT_printf.c ****       Div = v / Digit;
 277              		.loc 1 207 5 is_stmt 1 view .LVU89
 208:RTT/SEGGER_RTT_printf.c ****       v -= Div * Digit;
 278              		.loc 1 208 7 view .LVU90
ARM GAS  C:\Users\alronman\AppData\Local\Temp\ccOnPspb.s 			page 10


 208:RTT/SEGGER_RTT_printf.c ****       v -= Div * Digit;
 279              		.loc 1 208 11 is_stmt 0 view .LVU91
 280 008a B7FBF4F3 		udiv	r3, r7, r4
 281              	.LVL26:
 209:RTT/SEGGER_RTT_printf.c ****       _StoreChar(pBufferDesc, _aV2C[Div]);
 282              		.loc 1 209 7 is_stmt 1 view .LVU92
 283 008e 04FB1377 		mls	r7, r4, r3, r7
 284              	.LVL27:
 210:RTT/SEGGER_RTT_printf.c ****       if (pBufferDesc->ReturnValue < 0) {
 285              		.loc 1 210 7 view .LVU93
 286 0092 124A     		ldr	r2, .L29
 287 0094 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 288 0096 4846     		mov	r0, r9
 289 0098 FFF7FEFF 		bl	_StoreChar
 290              	.LVL28:
 211:RTT/SEGGER_RTT_printf.c ****         break;
 291              		.loc 1 211 7 view .LVU94
 211:RTT/SEGGER_RTT_printf.c ****         break;
 292              		.loc 1 211 22 is_stmt 0 view .LVU95
 293 009c D9F80C30 		ldr	r3, [r9, #12]
 211:RTT/SEGGER_RTT_printf.c ****         break;
 294              		.loc 1 211 10 view .LVU96
 295 00a0 002B     		cmp	r3, #0
 296 00a2 03DB     		blt	.L20
 297              		.loc 1 214 7 is_stmt 1 view .LVU97
 298              		.loc 1 214 13 is_stmt 0 view .LVU98
 299 00a4 B4FBF5F3 		udiv	r3, r4, r5
 300              	.LVL29:
 215:RTT/SEGGER_RTT_printf.c ****     } while (Digit);
 301              		.loc 1 215 13 is_stmt 1 view .LVU99
 302              		.loc 1 215 5 is_stmt 0 view .LVU100
 303 00a8 AC42     		cmp	r4, r5
 304 00aa EDD2     		bcs	.L26
 305              	.LVL30:
 306              	.L20:
 216:RTT/SEGGER_RTT_printf.c ****     //
 217:RTT/SEGGER_RTT_printf.c ****     // Print trailing spaces if necessary
 218:RTT/SEGGER_RTT_printf.c ****     //
 219:RTT/SEGGER_RTT_printf.c ****     if ((FormatFlags & FORMAT_FLAG_LEFT_JUSTIFY) == FORMAT_FLAG_LEFT_JUSTIFY) {
 307              		.loc 1 219 5 is_stmt 1 view .LVU101
 308              		.loc 1 219 8 is_stmt 0 view .LVU102
 309 00ac BBF1000F 		cmp	fp, #0
 310 00b0 02D0     		beq	.L7
 220:RTT/SEGGER_RTT_printf.c ****       if (FieldWidth != 0u) {
 311              		.loc 1 220 7 is_stmt 1 view .LVU103
 312              		.loc 1 220 10 is_stmt 0 view .LVU104
 313 00b2 BAF1000F 		cmp	r10, #0
 314 00b6 01D1     		bne	.L21
 315              	.L7:
 221:RTT/SEGGER_RTT_printf.c ****         while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 222:RTT/SEGGER_RTT_printf.c ****           FieldWidth--;
 223:RTT/SEGGER_RTT_printf.c ****           _StoreChar(pBufferDesc, ' ');
 224:RTT/SEGGER_RTT_printf.c ****           if (pBufferDesc->ReturnValue < 0) {
 225:RTT/SEGGER_RTT_printf.c ****             break;
 226:RTT/SEGGER_RTT_printf.c ****           }
 227:RTT/SEGGER_RTT_printf.c ****         }
 228:RTT/SEGGER_RTT_printf.c ****       }
ARM GAS  C:\Users\alronman\AppData\Local\Temp\ccOnPspb.s 			page 11


 229:RTT/SEGGER_RTT_printf.c ****     }
 230:RTT/SEGGER_RTT_printf.c ****   }
 231:RTT/SEGGER_RTT_printf.c **** }
 316              		.loc 1 231 1 view .LVU105
 317 00b8 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 318              	.LVL31:
 319              	.L21:
 221:RTT/SEGGER_RTT_printf.c ****         while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 320              		.loc 1 221 15 is_stmt 1 view .LVU106
 321 00bc BAF1000F 		cmp	r10, #0
 322 00c0 FAD0     		beq	.L7
 221:RTT/SEGGER_RTT_printf.c ****         while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 323              		.loc 1 221 35 is_stmt 0 discriminator 1 view .LVU107
 324 00c2 C245     		cmp	r10, r8
 325 00c4 F8D9     		bls	.L7
 222:RTT/SEGGER_RTT_printf.c ****           _StoreChar(pBufferDesc, ' ');
 326              		.loc 1 222 11 is_stmt 1 view .LVU108
 222:RTT/SEGGER_RTT_printf.c ****           _StoreChar(pBufferDesc, ' ');
 327              		.loc 1 222 21 is_stmt 0 view .LVU109
 328 00c6 0AF1FF3A 		add	r10, r10, #-1
 329              	.LVL32:
 223:RTT/SEGGER_RTT_printf.c ****           if (pBufferDesc->ReturnValue < 0) {
 330              		.loc 1 223 11 is_stmt 1 view .LVU110
 331 00ca 2021     		movs	r1, #32
 332 00cc 4846     		mov	r0, r9
 333 00ce FFF7FEFF 		bl	_StoreChar
 334              	.LVL33:
 224:RTT/SEGGER_RTT_printf.c ****             break;
 335              		.loc 1 224 11 view .LVU111
 224:RTT/SEGGER_RTT_printf.c ****             break;
 336              		.loc 1 224 26 is_stmt 0 view .LVU112
 337 00d2 D9F80C30 		ldr	r3, [r9, #12]
 224:RTT/SEGGER_RTT_printf.c ****             break;
 338              		.loc 1 224 14 view .LVU113
 339 00d6 002B     		cmp	r3, #0
 340 00d8 F0DA     		bge	.L21
 341 00da EDE7     		b	.L7
 342              	.L30:
 343              		.align	2
 344              	.L29:
 345 00dc 00000000 		.word	.LANCHOR0
 346              		.cfi_endproc
 347              	.LFE1:
 349              		.section	.text._PrintInt,"ax",%progbits
 350              		.align	1
 351              		.syntax unified
 352              		.thumb
 353              		.thumb_func
 354              		.fpu fpv4-sp-d16
 356              	_PrintInt:
 357              	.LVL34:
 358              	.LFB2:
 232:RTT/SEGGER_RTT_printf.c **** 
 233:RTT/SEGGER_RTT_printf.c **** /*********************************************************************
 234:RTT/SEGGER_RTT_printf.c **** *
 235:RTT/SEGGER_RTT_printf.c **** *       _PrintInt
 236:RTT/SEGGER_RTT_printf.c **** */
ARM GAS  C:\Users\alronman\AppData\Local\Temp\ccOnPspb.s 			page 12


 237:RTT/SEGGER_RTT_printf.c **** static void _PrintInt(SEGGER_RTT_PRINTF_DESC * pBufferDesc, int v, unsigned Base, unsigned NumDigit
 359              		.loc 1 237 146 is_stmt 1 view -0
 360              		.cfi_startproc
 361              		@ args = 8, pretend = 0, frame = 0
 362              		@ frame_needed = 0, uses_anonymous_args = 0
 363              		.loc 1 237 146 is_stmt 0 view .LVU115
 364 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 365              	.LCFI2:
 366              		.cfi_def_cfa_offset 32
 367              		.cfi_offset 4, -32
 368              		.cfi_offset 5, -28
 369              		.cfi_offset 6, -24
 370              		.cfi_offset 7, -20
 371              		.cfi_offset 8, -16
 372              		.cfi_offset 9, -12
 373              		.cfi_offset 10, -8
 374              		.cfi_offset 14, -4
 375 0004 82B0     		sub	sp, sp, #8
 376              	.LCFI3:
 377              		.cfi_def_cfa_offset 40
 378 0006 0746     		mov	r7, r0
 379 0008 8846     		mov	r8, r1
 380 000a 1546     		mov	r5, r2
 381 000c 9946     		mov	r9, r3
 382 000e 0A9E     		ldr	r6, [sp, #40]
 383 0010 DDF82CA0 		ldr	r10, [sp, #44]
 238:RTT/SEGGER_RTT_printf.c ****   unsigned Width;
 384              		.loc 1 238 3 is_stmt 1 view .LVU116
 239:RTT/SEGGER_RTT_printf.c ****   int Number;
 385              		.loc 1 239 3 view .LVU117
 240:RTT/SEGGER_RTT_printf.c **** 
 241:RTT/SEGGER_RTT_printf.c ****   Number = (v < 0) ? -v : v;
 386              		.loc 1 241 3 view .LVU118
 387              		.loc 1 241 10 is_stmt 0 view .LVU119
 388 0014 81EAE17C 		eor	ip, r1, r1, asr #31
 389 0018 ACEBE17C 		sub	ip, ip, r1, asr #31
 390              	.LVL35:
 242:RTT/SEGGER_RTT_printf.c **** 
 243:RTT/SEGGER_RTT_printf.c ****   //
 244:RTT/SEGGER_RTT_printf.c ****   // Get actual field width
 245:RTT/SEGGER_RTT_printf.c ****   //
 246:RTT/SEGGER_RTT_printf.c ****   Width = 1u;
 391              		.loc 1 246 3 is_stmt 1 view .LVU120
 247:RTT/SEGGER_RTT_printf.c ****   while (Number >= (int)Base) {
 392              		.loc 1 247 3 view .LVU121
 246:RTT/SEGGER_RTT_printf.c ****   while (Number >= (int)Base) {
 393              		.loc 1 246 9 is_stmt 0 view .LVU122
 394 001c 0124     		movs	r4, #1
 395              		.loc 1 247 9 view .LVU123
 396 001e 02E0     		b	.L32
 397              	.LVL36:
 398              	.L33:
 248:RTT/SEGGER_RTT_printf.c ****     Number = (Number / (int)Base);
 399              		.loc 1 248 5 is_stmt 1 view .LVU124
 400              		.loc 1 248 12 is_stmt 0 view .LVU125
 401 0020 9CFBF5FC 		sdiv	ip, ip, r5
 402              	.LVL37:
ARM GAS  C:\Users\alronman\AppData\Local\Temp\ccOnPspb.s 			page 13


 249:RTT/SEGGER_RTT_printf.c ****     Width++;
 403              		.loc 1 249 5 is_stmt 1 view .LVU126
 404              		.loc 1 249 10 is_stmt 0 view .LVU127
 405 0024 0134     		adds	r4, r4, #1
 406              	.LVL38:
 407              	.L32:
 247:RTT/SEGGER_RTT_printf.c ****     Number = (Number / (int)Base);
 408              		.loc 1 247 9 is_stmt 1 view .LVU128
 409 0026 6545     		cmp	r5, ip
 410 0028 FADD     		ble	.L33
 250:RTT/SEGGER_RTT_printf.c ****   }
 251:RTT/SEGGER_RTT_printf.c ****   if (NumDigits > Width) {
 411              		.loc 1 251 3 view .LVU129
 412              		.loc 1 251 6 is_stmt 0 view .LVU130
 413 002a 4C45     		cmp	r4, r9
 414 002c 00D2     		bcs	.L34
 252:RTT/SEGGER_RTT_printf.c ****     Width = NumDigits;
 415              		.loc 1 252 11 view .LVU131
 416 002e 4C46     		mov	r4, r9
 417              	.LVL39:
 418              	.L34:
 253:RTT/SEGGER_RTT_printf.c ****   }
 254:RTT/SEGGER_RTT_printf.c ****   if ((FieldWidth > 0u) && ((v < 0) || ((FormatFlags & FORMAT_FLAG_PRINT_SIGN) == FORMAT_FLAG_PRINT
 419              		.loc 1 254 3 is_stmt 1 view .LVU132
 420              		.loc 1 254 6 is_stmt 0 view .LVU133
 421 0030 36B1     		cbz	r6, .L35
 422              		.loc 1 254 25 discriminator 1 view .LVU134
 423 0032 B8F1000F 		cmp	r8, #0
 424 0036 02DB     		blt	.L36
 425              		.loc 1 254 37 discriminator 2 view .LVU135
 426 0038 1AF0040F 		tst	r10, #4
 427 003c 00D0     		beq	.L35
 428              	.L36:
 255:RTT/SEGGER_RTT_printf.c ****     FieldWidth--;
 429              		.loc 1 255 5 is_stmt 1 view .LVU136
 430              		.loc 1 255 15 is_stmt 0 view .LVU137
 431 003e 013E     		subs	r6, r6, #1
 432              	.LVL40:
 433              	.L35:
 256:RTT/SEGGER_RTT_printf.c ****   }
 257:RTT/SEGGER_RTT_printf.c **** 
 258:RTT/SEGGER_RTT_printf.c ****   //
 259:RTT/SEGGER_RTT_printf.c ****   // Print leading spaces if necessary
 260:RTT/SEGGER_RTT_printf.c ****   //
 261:RTT/SEGGER_RTT_printf.c ****   if ((((FormatFlags & FORMAT_FLAG_PAD_ZERO) == 0u) || (NumDigits != 0u)) && ((FormatFlags & FORMAT
 434              		.loc 1 261 3 is_stmt 1 view .LVU138
 435              		.loc 1 261 6 is_stmt 0 view .LVU139
 436 0040 1AF0020F 		tst	r10, #2
 437 0044 02D0     		beq	.L37
 438              		.loc 1 261 53 discriminator 2 view .LVU140
 439 0046 B9F1000F 		cmp	r9, #0
 440 004a 03D0     		beq	.L38
 441              	.L37:
 442              		.loc 1 261 75 discriminator 3 view .LVU141
 443 004c 1AF0010F 		tst	r10, #1
 444 0050 00D1     		bne	.L38
 262:RTT/SEGGER_RTT_printf.c ****     if (FieldWidth != 0u) {
ARM GAS  C:\Users\alronman\AppData\Local\Temp\ccOnPspb.s 			page 14


 445              		.loc 1 262 5 is_stmt 1 view .LVU142
 446              		.loc 1 262 8 is_stmt 0 view .LVU143
 447 0052 AEB9     		cbnz	r6, .L39
 448              	.LVL41:
 449              	.L38:
 263:RTT/SEGGER_RTT_printf.c ****       while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 264:RTT/SEGGER_RTT_printf.c ****         FieldWidth--;
 265:RTT/SEGGER_RTT_printf.c ****         _StoreChar(pBufferDesc, ' ');
 266:RTT/SEGGER_RTT_printf.c ****         if (pBufferDesc->ReturnValue < 0) {
 267:RTT/SEGGER_RTT_printf.c ****           break;
 268:RTT/SEGGER_RTT_printf.c ****         }
 269:RTT/SEGGER_RTT_printf.c ****       }
 270:RTT/SEGGER_RTT_printf.c ****     }
 271:RTT/SEGGER_RTT_printf.c ****   }
 272:RTT/SEGGER_RTT_printf.c ****   //
 273:RTT/SEGGER_RTT_printf.c ****   // Print sign if necessary
 274:RTT/SEGGER_RTT_printf.c ****   //
 275:RTT/SEGGER_RTT_printf.c ****   if (pBufferDesc->ReturnValue >= 0) {
 450              		.loc 1 275 3 is_stmt 1 view .LVU144
 451              		.loc 1 275 18 is_stmt 0 view .LVU145
 452 0054 FB68     		ldr	r3, [r7, #12]
 453              		.loc 1 275 6 view .LVU146
 454 0056 002B     		cmp	r3, #0
 455 0058 0FDB     		blt	.L31
 276:RTT/SEGGER_RTT_printf.c ****     if (v < 0) {
 456              		.loc 1 276 5 is_stmt 1 view .LVU147
 457              		.loc 1 276 8 is_stmt 0 view .LVU148
 458 005a B8F1000F 		cmp	r8, #0
 459 005e 1CDB     		blt	.L49
 277:RTT/SEGGER_RTT_printf.c ****       v = -v;
 278:RTT/SEGGER_RTT_printf.c ****       _StoreChar(pBufferDesc, '-');
 279:RTT/SEGGER_RTT_printf.c ****     } else if ((FormatFlags & FORMAT_FLAG_PRINT_SIGN) == FORMAT_FLAG_PRINT_SIGN) {
 460              		.loc 1 279 12 is_stmt 1 view .LVU149
 461              		.loc 1 279 15 is_stmt 0 view .LVU150
 462 0060 1AF0040F 		tst	r10, #4
 463 0064 20D1     		bne	.L50
 464              	.L43:
 280:RTT/SEGGER_RTT_printf.c ****       _StoreChar(pBufferDesc, '+');
 281:RTT/SEGGER_RTT_printf.c ****     } else {
 282:RTT/SEGGER_RTT_printf.c **** 
 283:RTT/SEGGER_RTT_printf.c ****     }
 465              		.loc 1 283 5 is_stmt 1 view .LVU151
 284:RTT/SEGGER_RTT_printf.c ****     if (pBufferDesc->ReturnValue >= 0) {
 466              		.loc 1 284 5 view .LVU152
 467              		.loc 1 284 20 is_stmt 0 view .LVU153
 468 0066 FB68     		ldr	r3, [r7, #12]
 469              		.loc 1 284 8 view .LVU154
 470 0068 002B     		cmp	r3, #0
 471 006a 06DB     		blt	.L31
 285:RTT/SEGGER_RTT_printf.c ****       //
 286:RTT/SEGGER_RTT_printf.c ****       // Print leading zeros if necessary
 287:RTT/SEGGER_RTT_printf.c ****       //
 288:RTT/SEGGER_RTT_printf.c ****       if (((FormatFlags & FORMAT_FLAG_PAD_ZERO) == FORMAT_FLAG_PAD_ZERO) && ((FormatFlags & FORMAT_
 472              		.loc 1 288 7 is_stmt 1 view .LVU155
 473              		.loc 1 288 74 is_stmt 0 view .LVU156
 474 006c 0AF00303 		and	r3, r10, #3
 475              		.loc 1 288 10 view .LVU157
ARM GAS  C:\Users\alronman\AppData\Local\Temp\ccOnPspb.s 			page 15


 476 0070 022B     		cmp	r3, #2
 477 0072 1ED0     		beq	.L51
 478              	.L44:
 289:RTT/SEGGER_RTT_printf.c ****         if (FieldWidth != 0u) {
 290:RTT/SEGGER_RTT_printf.c ****           while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 291:RTT/SEGGER_RTT_printf.c ****             FieldWidth--;
 292:RTT/SEGGER_RTT_printf.c ****             _StoreChar(pBufferDesc, '0');
 293:RTT/SEGGER_RTT_printf.c ****             if (pBufferDesc->ReturnValue < 0) {
 294:RTT/SEGGER_RTT_printf.c ****               break;
 295:RTT/SEGGER_RTT_printf.c ****             }
 296:RTT/SEGGER_RTT_printf.c ****           }
 297:RTT/SEGGER_RTT_printf.c ****         }
 298:RTT/SEGGER_RTT_printf.c ****       }
 299:RTT/SEGGER_RTT_printf.c ****       if (pBufferDesc->ReturnValue >= 0) {
 479              		.loc 1 299 7 is_stmt 1 view .LVU158
 480              		.loc 1 299 22 is_stmt 0 view .LVU159
 481 0074 FB68     		ldr	r3, [r7, #12]
 482              		.loc 1 299 10 view .LVU160
 483 0076 002B     		cmp	r3, #0
 484 0078 2DDA     		bge	.L52
 485              	.L31:
 300:RTT/SEGGER_RTT_printf.c ****         //
 301:RTT/SEGGER_RTT_printf.c ****         // Print number without sign
 302:RTT/SEGGER_RTT_printf.c ****         //
 303:RTT/SEGGER_RTT_printf.c ****         _PrintUnsigned(pBufferDesc, (unsigned)v, Base, NumDigits, FieldWidth, FormatFlags);
 304:RTT/SEGGER_RTT_printf.c ****       }
 305:RTT/SEGGER_RTT_printf.c ****     }
 306:RTT/SEGGER_RTT_printf.c ****   }
 307:RTT/SEGGER_RTT_printf.c **** }
 486              		.loc 1 307 1 view .LVU161
 487 007a 02B0     		add	sp, sp, #8
 488              	.LCFI4:
 489              		.cfi_remember_state
 490              		.cfi_def_cfa_offset 32
 491              		@ sp needed
 492 007c BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 493              	.LVL42:
 494              	.L39:
 495              	.LCFI5:
 496              		.cfi_restore_state
 263:RTT/SEGGER_RTT_printf.c ****         FieldWidth--;
 497              		.loc 1 263 13 is_stmt 1 view .LVU162
 498 0080 002E     		cmp	r6, #0
 499 0082 E7D0     		beq	.L38
 263:RTT/SEGGER_RTT_printf.c ****         FieldWidth--;
 500              		.loc 1 263 33 is_stmt 0 discriminator 1 view .LVU163
 501 0084 A642     		cmp	r6, r4
 502 0086 E5D9     		bls	.L38
 264:RTT/SEGGER_RTT_printf.c ****         _StoreChar(pBufferDesc, ' ');
 503              		.loc 1 264 9 is_stmt 1 view .LVU164
 264:RTT/SEGGER_RTT_printf.c ****         _StoreChar(pBufferDesc, ' ');
 504              		.loc 1 264 19 is_stmt 0 view .LVU165
 505 0088 013E     		subs	r6, r6, #1
 506              	.LVL43:
 265:RTT/SEGGER_RTT_printf.c ****         if (pBufferDesc->ReturnValue < 0) {
 507              		.loc 1 265 9 is_stmt 1 view .LVU166
 508 008a 2021     		movs	r1, #32
ARM GAS  C:\Users\alronman\AppData\Local\Temp\ccOnPspb.s 			page 16


 509 008c 3846     		mov	r0, r7
 510 008e FFF7FEFF 		bl	_StoreChar
 511              	.LVL44:
 266:RTT/SEGGER_RTT_printf.c ****           break;
 512              		.loc 1 266 9 view .LVU167
 266:RTT/SEGGER_RTT_printf.c ****           break;
 513              		.loc 1 266 24 is_stmt 0 view .LVU168
 514 0092 FB68     		ldr	r3, [r7, #12]
 266:RTT/SEGGER_RTT_printf.c ****           break;
 515              		.loc 1 266 12 view .LVU169
 516 0094 002B     		cmp	r3, #0
 517 0096 F3DA     		bge	.L39
 518 0098 DCE7     		b	.L38
 519              	.L49:
 277:RTT/SEGGER_RTT_printf.c ****       _StoreChar(pBufferDesc, '-');
 520              		.loc 1 277 7 is_stmt 1 view .LVU170
 277:RTT/SEGGER_RTT_printf.c ****       _StoreChar(pBufferDesc, '-');
 521              		.loc 1 277 9 is_stmt 0 view .LVU171
 522 009a C8F10008 		rsb	r8, r8, #0
 523              	.LVL45:
 278:RTT/SEGGER_RTT_printf.c ****     } else if ((FormatFlags & FORMAT_FLAG_PRINT_SIGN) == FORMAT_FLAG_PRINT_SIGN) {
 524              		.loc 1 278 7 is_stmt 1 view .LVU172
 525 009e 2D21     		movs	r1, #45
 526 00a0 3846     		mov	r0, r7
 527 00a2 FFF7FEFF 		bl	_StoreChar
 528              	.LVL46:
 529 00a6 DEE7     		b	.L43
 530              	.L50:
 280:RTT/SEGGER_RTT_printf.c ****     } else {
 531              		.loc 1 280 7 view .LVU173
 532 00a8 2B21     		movs	r1, #43
 533 00aa 3846     		mov	r0, r7
 534 00ac FFF7FEFF 		bl	_StoreChar
 535              	.LVL47:
 536 00b0 D9E7     		b	.L43
 537              	.L51:
 288:RTT/SEGGER_RTT_printf.c ****         if (FieldWidth != 0u) {
 538              		.loc 1 288 126 is_stmt 0 discriminator 1 view .LVU174
 539 00b2 B9F1000F 		cmp	r9, #0
 540 00b6 DDD1     		bne	.L44
 289:RTT/SEGGER_RTT_printf.c ****           while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 541              		.loc 1 289 9 is_stmt 1 view .LVU175
 289:RTT/SEGGER_RTT_printf.c ****           while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 542              		.loc 1 289 12 is_stmt 0 view .LVU176
 543 00b8 002E     		cmp	r6, #0
 544 00ba DBD0     		beq	.L44
 545              	.L45:
 290:RTT/SEGGER_RTT_printf.c ****             FieldWidth--;
 546              		.loc 1 290 17 is_stmt 1 view .LVU177
 547 00bc 002E     		cmp	r6, #0
 548 00be D9D0     		beq	.L44
 290:RTT/SEGGER_RTT_printf.c ****             FieldWidth--;
 549              		.loc 1 290 37 is_stmt 0 discriminator 1 view .LVU178
 550 00c0 A642     		cmp	r6, r4
 551 00c2 D7D9     		bls	.L44
 291:RTT/SEGGER_RTT_printf.c ****             _StoreChar(pBufferDesc, '0');
 552              		.loc 1 291 13 is_stmt 1 view .LVU179
ARM GAS  C:\Users\alronman\AppData\Local\Temp\ccOnPspb.s 			page 17


 291:RTT/SEGGER_RTT_printf.c ****             _StoreChar(pBufferDesc, '0');
 553              		.loc 1 291 23 is_stmt 0 view .LVU180
 554 00c4 013E     		subs	r6, r6, #1
 555              	.LVL48:
 292:RTT/SEGGER_RTT_printf.c ****             if (pBufferDesc->ReturnValue < 0) {
 556              		.loc 1 292 13 is_stmt 1 view .LVU181
 557 00c6 3021     		movs	r1, #48
 558 00c8 3846     		mov	r0, r7
 559 00ca FFF7FEFF 		bl	_StoreChar
 560              	.LVL49:
 293:RTT/SEGGER_RTT_printf.c ****               break;
 561              		.loc 1 293 13 view .LVU182
 293:RTT/SEGGER_RTT_printf.c ****               break;
 562              		.loc 1 293 28 is_stmt 0 view .LVU183
 563 00ce FB68     		ldr	r3, [r7, #12]
 293:RTT/SEGGER_RTT_printf.c ****               break;
 564              		.loc 1 293 16 view .LVU184
 565 00d0 002B     		cmp	r3, #0
 566 00d2 F3DA     		bge	.L45
 567 00d4 CEE7     		b	.L44
 568              	.L52:
 303:RTT/SEGGER_RTT_printf.c ****       }
 569              		.loc 1 303 9 is_stmt 1 view .LVU185
 570 00d6 CDF804A0 		str	r10, [sp, #4]
 571 00da 0096     		str	r6, [sp]
 572 00dc 4B46     		mov	r3, r9
 573 00de 2A46     		mov	r2, r5
 574 00e0 4146     		mov	r1, r8
 575 00e2 3846     		mov	r0, r7
 576 00e4 FFF7FEFF 		bl	_PrintUnsigned
 577              	.LVL50:
 578              		.loc 1 307 1 is_stmt 0 view .LVU186
 579 00e8 C7E7     		b	.L31
 580              		.cfi_endproc
 581              	.LFE2:
 583              		.section	.text.SEGGER_RTT_vprintf,"ax",%progbits
 584              		.align	1
 585              		.global	SEGGER_RTT_vprintf
 586              		.syntax unified
 587              		.thumb
 588              		.thumb_func
 589              		.fpu fpv4-sp-d16
 591              	SEGGER_RTT_vprintf:
 592              	.LVL51:
 593              	.LFB3:
 308:RTT/SEGGER_RTT_printf.c **** 
 309:RTT/SEGGER_RTT_printf.c **** /*********************************************************************
 310:RTT/SEGGER_RTT_printf.c **** *
 311:RTT/SEGGER_RTT_printf.c **** *       Public code
 312:RTT/SEGGER_RTT_printf.c **** *
 313:RTT/SEGGER_RTT_printf.c **** **********************************************************************
 314:RTT/SEGGER_RTT_printf.c **** */
 315:RTT/SEGGER_RTT_printf.c **** /*********************************************************************
 316:RTT/SEGGER_RTT_printf.c **** *
 317:RTT/SEGGER_RTT_printf.c **** *       SEGGER_RTT_vprintf
 318:RTT/SEGGER_RTT_printf.c **** *
 319:RTT/SEGGER_RTT_printf.c **** *  Function description
ARM GAS  C:\Users\alronman\AppData\Local\Temp\ccOnPspb.s 			page 18


 320:RTT/SEGGER_RTT_printf.c **** *    Stores a formatted string in SEGGER RTT control block.
 321:RTT/SEGGER_RTT_printf.c **** *    This data is read by the host.
 322:RTT/SEGGER_RTT_printf.c **** *
 323:RTT/SEGGER_RTT_printf.c **** *  Parameters
 324:RTT/SEGGER_RTT_printf.c **** *    BufferIndex  Index of "Up"-buffer to be used. (e.g. 0 for "Terminal")
 325:RTT/SEGGER_RTT_printf.c **** *    sFormat      Pointer to format string
 326:RTT/SEGGER_RTT_printf.c **** *    pParamList   Pointer to the list of arguments for the format string
 327:RTT/SEGGER_RTT_printf.c **** *
 328:RTT/SEGGER_RTT_printf.c **** *  Return values
 329:RTT/SEGGER_RTT_printf.c **** *    >= 0:  Number of bytes which have been stored in the "Up"-buffer.
 330:RTT/SEGGER_RTT_printf.c **** *     < 0:  Error
 331:RTT/SEGGER_RTT_printf.c **** */
 332:RTT/SEGGER_RTT_printf.c **** int SEGGER_RTT_vprintf(unsigned BufferIndex, const char * sFormat, va_list * pParamList) {
 594              		.loc 1 332 90 is_stmt 1 view -0
 595              		.cfi_startproc
 596              		@ args = 0, pretend = 0, frame = 88
 597              		@ frame_needed = 0, uses_anonymous_args = 0
 598              		.loc 1 332 90 is_stmt 0 view .LVU188
 599 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 600              	.LCFI6:
 601              		.cfi_def_cfa_offset 20
 602              		.cfi_offset 4, -20
 603              		.cfi_offset 5, -16
 604              		.cfi_offset 6, -12
 605              		.cfi_offset 7, -8
 606              		.cfi_offset 14, -4
 607 0002 99B0     		sub	sp, sp, #100
 608              	.LCFI7:
 609              		.cfi_def_cfa_offset 120
 610 0004 0646     		mov	r6, r0
 611 0006 0C46     		mov	r4, r1
 612 0008 1546     		mov	r5, r2
 333:RTT/SEGGER_RTT_printf.c ****   char c;
 613              		.loc 1 333 3 is_stmt 1 view .LVU189
 334:RTT/SEGGER_RTT_printf.c ****   SEGGER_RTT_PRINTF_DESC BufferDesc;
 614              		.loc 1 334 3 view .LVU190
 335:RTT/SEGGER_RTT_printf.c ****   int v;
 615              		.loc 1 335 3 view .LVU191
 336:RTT/SEGGER_RTT_printf.c ****   unsigned NumDigits;
 616              		.loc 1 336 3 view .LVU192
 337:RTT/SEGGER_RTT_printf.c ****   unsigned FormatFlags;
 617              		.loc 1 337 3 view .LVU193
 338:RTT/SEGGER_RTT_printf.c ****   unsigned FieldWidth;
 618              		.loc 1 338 3 view .LVU194
 339:RTT/SEGGER_RTT_printf.c ****   char acBuffer[SEGGER_RTT_PRINTF_BUFFER_SIZE];
 619              		.loc 1 339 3 view .LVU195
 340:RTT/SEGGER_RTT_printf.c **** 
 341:RTT/SEGGER_RTT_printf.c ****   BufferDesc.pBuffer        = acBuffer;
 620              		.loc 1 341 3 view .LVU196
 621              		.loc 1 341 29 is_stmt 0 view .LVU197
 622 000a 03AB     		add	r3, sp, #12
 623 000c 1393     		str	r3, [sp, #76]
 342:RTT/SEGGER_RTT_printf.c ****   BufferDesc.BufferSize     = SEGGER_RTT_PRINTF_BUFFER_SIZE;
 624              		.loc 1 342 3 is_stmt 1 view .LVU198
 625              		.loc 1 342 29 is_stmt 0 view .LVU199
 626 000e 4023     		movs	r3, #64
 627 0010 1493     		str	r3, [sp, #80]
ARM GAS  C:\Users\alronman\AppData\Local\Temp\ccOnPspb.s 			page 19


 343:RTT/SEGGER_RTT_printf.c ****   BufferDesc.Cnt            = 0u;
 628              		.loc 1 343 3 is_stmt 1 view .LVU200
 629              		.loc 1 343 29 is_stmt 0 view .LVU201
 630 0012 0023     		movs	r3, #0
 631 0014 1593     		str	r3, [sp, #84]
 344:RTT/SEGGER_RTT_printf.c ****   BufferDesc.RTTBufferIndex = BufferIndex;
 632              		.loc 1 344 3 is_stmt 1 view .LVU202
 633              		.loc 1 344 29 is_stmt 0 view .LVU203
 634 0016 1790     		str	r0, [sp, #92]
 345:RTT/SEGGER_RTT_printf.c ****   BufferDesc.ReturnValue    = 0;
 635              		.loc 1 345 3 is_stmt 1 view .LVU204
 636              		.loc 1 345 29 is_stmt 0 view .LVU205
 637 0018 1693     		str	r3, [sp, #88]
 638 001a 8AE0     		b	.L81
 639              	.LVL52:
 640              	.L89:
 346:RTT/SEGGER_RTT_printf.c **** 
 347:RTT/SEGGER_RTT_printf.c ****   do {
 348:RTT/SEGGER_RTT_printf.c ****     c = *sFormat;
 349:RTT/SEGGER_RTT_printf.c ****     sFormat++;
 350:RTT/SEGGER_RTT_printf.c ****     if (c == 0u) {
 351:RTT/SEGGER_RTT_printf.c ****       break;
 352:RTT/SEGGER_RTT_printf.c ****     }
 353:RTT/SEGGER_RTT_printf.c ****     if (c == '%') {
 354:RTT/SEGGER_RTT_printf.c ****       //
 355:RTT/SEGGER_RTT_printf.c ****       // Filter out flags
 356:RTT/SEGGER_RTT_printf.c ****       //
 357:RTT/SEGGER_RTT_printf.c ****       FormatFlags = 0u;
 641              		.loc 1 357 19 view .LVU206
 642 001c 0020     		movs	r0, #0
 358:RTT/SEGGER_RTT_printf.c ****       v = 1;
 643              		.loc 1 358 9 view .LVU207
 644 001e 0122     		movs	r2, #1
 645 0020 11E0     		b	.L62
 646              	.LVL53:
 647              	.L59:
 359:RTT/SEGGER_RTT_printf.c ****       do {
 360:RTT/SEGGER_RTT_printf.c ****         c = *sFormat;
 361:RTT/SEGGER_RTT_printf.c ****         switch (c) {
 362:RTT/SEGGER_RTT_printf.c ****         case '-': FormatFlags |= FORMAT_FLAG_LEFT_JUSTIFY; sFormat++; break;
 648              		.loc 1 362 19 is_stmt 1 view .LVU208
 649              		.loc 1 362 31 is_stmt 0 view .LVU209
 650 0022 40F00100 		orr	r0, r0, #1
 651              	.LVL54:
 652              		.loc 1 362 60 is_stmt 1 view .LVU210
 653              		.loc 1 362 67 is_stmt 0 view .LVU211
 654 0026 0134     		adds	r4, r4, #1
 655              	.LVL55:
 656              		.loc 1 362 71 is_stmt 1 view .LVU212
 657              		.loc 1 362 9 is_stmt 0 view .LVU213
 658 0028 0CE0     		b	.L56
 659              	.L57:
 363:RTT/SEGGER_RTT_printf.c ****         case '0': FormatFlags |= FORMAT_FLAG_PAD_ZERO;     sFormat++; break;
 660              		.loc 1 363 19 is_stmt 1 view .LVU214
 661              		.loc 1 363 31 is_stmt 0 view .LVU215
 662 002a 40F00200 		orr	r0, r0, #2
 663              	.LVL56:
ARM GAS  C:\Users\alronman\AppData\Local\Temp\ccOnPspb.s 			page 20


 664              		.loc 1 363 60 is_stmt 1 view .LVU216
 665              		.loc 1 363 67 is_stmt 0 view .LVU217
 666 002e 0134     		adds	r4, r4, #1
 667              	.LVL57:
 668              		.loc 1 363 71 is_stmt 1 view .LVU218
 669              		.loc 1 363 9 is_stmt 0 view .LVU219
 670 0030 08E0     		b	.L56
 671              	.L60:
 364:RTT/SEGGER_RTT_printf.c ****         case '+': FormatFlags |= FORMAT_FLAG_PRINT_SIGN;   sFormat++; break;
 672              		.loc 1 364 19 is_stmt 1 view .LVU220
 673              		.loc 1 364 31 is_stmt 0 view .LVU221
 674 0032 40F00400 		orr	r0, r0, #4
 675              	.LVL58:
 676              		.loc 1 364 60 is_stmt 1 view .LVU222
 677              		.loc 1 364 67 is_stmt 0 view .LVU223
 678 0036 0134     		adds	r4, r4, #1
 679              	.LVL59:
 680              		.loc 1 364 71 is_stmt 1 view .LVU224
 681              		.loc 1 364 9 is_stmt 0 view .LVU225
 682 0038 04E0     		b	.L56
 683              	.L61:
 365:RTT/SEGGER_RTT_printf.c ****         case '#': FormatFlags |= FORMAT_FLAG_ALTERNATE;    sFormat++; break;
 684              		.loc 1 365 19 is_stmt 1 view .LVU226
 685              		.loc 1 365 31 is_stmt 0 view .LVU227
 686 003a 40F00800 		orr	r0, r0, #8
 687              	.LVL60:
 688              		.loc 1 365 60 is_stmt 1 view .LVU228
 689              		.loc 1 365 67 is_stmt 0 view .LVU229
 690 003e 0134     		adds	r4, r4, #1
 691              	.LVL61:
 692              		.loc 1 365 71 is_stmt 1 view .LVU230
 693              		.loc 1 365 9 is_stmt 0 view .LVU231
 694 0040 00E0     		b	.L56
 695              	.L84:
 361:RTT/SEGGER_RTT_printf.c ****         case '-': FormatFlags |= FORMAT_FLAG_LEFT_JUSTIFY; sFormat++; break;
 696              		.loc 1 361 9 view .LVU232
 697 0042 0022     		movs	r2, #0
 698              	.LVL62:
 699              	.L56:
 366:RTT/SEGGER_RTT_printf.c ****         default:  v = 0; break;
 367:RTT/SEGGER_RTT_printf.c ****         }
 368:RTT/SEGGER_RTT_printf.c ****       } while (v);
 700              		.loc 1 368 15 is_stmt 1 view .LVU233
 701              		.loc 1 368 7 is_stmt 0 view .LVU234
 702 0044 12B3     		cbz	r2, .L64
 703              	.LVL63:
 704              	.L62:
 359:RTT/SEGGER_RTT_printf.c ****         c = *sFormat;
 705              		.loc 1 359 7 is_stmt 1 view .LVU235
 360:RTT/SEGGER_RTT_printf.c ****         switch (c) {
 706              		.loc 1 360 9 view .LVU236
 360:RTT/SEGGER_RTT_printf.c ****         switch (c) {
 707              		.loc 1 360 11 is_stmt 0 view .LVU237
 708 0046 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 709              	.LVL64:
 361:RTT/SEGGER_RTT_printf.c ****         case '-': FormatFlags |= FORMAT_FLAG_LEFT_JUSTIFY; sFormat++; break;
 710              		.loc 1 361 9 is_stmt 1 view .LVU238
ARM GAS  C:\Users\alronman\AppData\Local\Temp\ccOnPspb.s 			page 21


 711 0048 233B     		subs	r3, r3, #35
 712              	.LVL65:
 361:RTT/SEGGER_RTT_printf.c ****         case '-': FormatFlags |= FORMAT_FLAG_LEFT_JUSTIFY; sFormat++; break;
 713              		.loc 1 361 9 is_stmt 0 view .LVU239
 714 004a 0D2B     		cmp	r3, #13
 715 004c F9D8     		bhi	.L84
 716 004e 01A1     		adr	r1, .L58
 717 0050 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 718              		.p2align 2
 719              	.L58:
 720 0054 3B000000 		.word	.L61+1
 721 0058 43000000 		.word	.L84+1
 722 005c 43000000 		.word	.L84+1
 723 0060 43000000 		.word	.L84+1
 724 0064 43000000 		.word	.L84+1
 725 0068 43000000 		.word	.L84+1
 726 006c 43000000 		.word	.L84+1
 727 0070 43000000 		.word	.L84+1
 728 0074 33000000 		.word	.L60+1
 729 0078 43000000 		.word	.L84+1
 730 007c 23000000 		.word	.L59+1
 731 0080 43000000 		.word	.L84+1
 732 0084 43000000 		.word	.L84+1
 733 0088 2B000000 		.word	.L57+1
 734              	.LVL66:
 735              		.p2align 1
 736              	.L64:
 369:RTT/SEGGER_RTT_printf.c ****       //
 370:RTT/SEGGER_RTT_printf.c ****       // filter out field with
 371:RTT/SEGGER_RTT_printf.c ****       //
 372:RTT/SEGGER_RTT_printf.c ****       FieldWidth = 0u;
 373:RTT/SEGGER_RTT_printf.c ****       do {
 737              		.loc 1 373 7 is_stmt 1 view .LVU240
 374:RTT/SEGGER_RTT_printf.c ****         c = *sFormat;
 738              		.loc 1 374 9 view .LVU241
 739              		.loc 1 374 11 is_stmt 0 view .LVU242
 740 008c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 741              	.LVL67:
 375:RTT/SEGGER_RTT_printf.c ****         if ((c < '0') || (c > '9')) {
 742              		.loc 1 375 9 is_stmt 1 view .LVU243
 743              		.loc 1 375 23 is_stmt 0 view .LVU244
 744 008e A3F13001 		sub	r1, r3, #48
 745 0092 C9B2     		uxtb	r1, r1
 746              		.loc 1 375 12 view .LVU245
 747 0094 0929     		cmp	r1, #9
 748 0096 07D8     		bhi	.L63
 376:RTT/SEGGER_RTT_printf.c ****           break;
 377:RTT/SEGGER_RTT_printf.c ****         }
 378:RTT/SEGGER_RTT_printf.c ****         sFormat++;
 749              		.loc 1 378 9 is_stmt 1 view .LVU246
 750              		.loc 1 378 16 is_stmt 0 view .LVU247
 751 0098 0134     		adds	r4, r4, #1
 752              	.LVL68:
 379:RTT/SEGGER_RTT_printf.c ****         FieldWidth = (FieldWidth * 10u) + ((unsigned)c - '0');
 753              		.loc 1 379 9 is_stmt 1 view .LVU248
 754              		.loc 1 379 34 is_stmt 0 view .LVU249
 755 009a 02EB8202 		add	r2, r2, r2, lsl #2
ARM GAS  C:\Users\alronman\AppData\Local\Temp\ccOnPspb.s 			page 22


 756              	.LVL69:
 757              		.loc 1 379 41 view .LVU250
 758 009e 03EB4203 		add	r3, r3, r2, lsl #1
 759              	.LVL70:
 760              		.loc 1 379 20 view .LVU251
 761 00a2 A3F13002 		sub	r2, r3, #48
 762              	.LVL71:
 380:RTT/SEGGER_RTT_printf.c ****       } while (1);
 763              		.loc 1 380 15 is_stmt 1 view .LVU252
 374:RTT/SEGGER_RTT_printf.c ****         if ((c < '0') || (c > '9')) {
 764              		.loc 1 374 11 is_stmt 0 view .LVU253
 765 00a6 F1E7     		b	.L64
 766              	.LVL72:
 767              	.L63:
 381:RTT/SEGGER_RTT_printf.c **** 
 382:RTT/SEGGER_RTT_printf.c ****       //
 383:RTT/SEGGER_RTT_printf.c ****       // Filter out precision (number of digits to display)
 384:RTT/SEGGER_RTT_printf.c ****       //
 385:RTT/SEGGER_RTT_printf.c ****       NumDigits = 0u;
 768              		.loc 1 385 7 is_stmt 1 view .LVU254
 386:RTT/SEGGER_RTT_printf.c ****       c = *sFormat;
 769              		.loc 1 386 7 view .LVU255
 387:RTT/SEGGER_RTT_printf.c ****       if (c == '.') {
 770              		.loc 1 387 7 view .LVU256
 771              		.loc 1 387 10 is_stmt 0 view .LVU257
 772 00a8 2E2B     		cmp	r3, #46
 773 00aa 02D0     		beq	.L87
 385:RTT/SEGGER_RTT_printf.c ****       c = *sFormat;
 774              		.loc 1 385 17 view .LVU258
 775 00ac 0023     		movs	r3, #0
 776              	.LVL73:
 777              	.L65:
 388:RTT/SEGGER_RTT_printf.c ****         sFormat++;
 389:RTT/SEGGER_RTT_printf.c ****         do {
 390:RTT/SEGGER_RTT_printf.c ****           c = *sFormat;
 391:RTT/SEGGER_RTT_printf.c ****           if ((c < '0') || (c > '9')) {
 392:RTT/SEGGER_RTT_printf.c ****             break;
 393:RTT/SEGGER_RTT_printf.c ****           }
 394:RTT/SEGGER_RTT_printf.c ****           sFormat++;
 395:RTT/SEGGER_RTT_printf.c ****           NumDigits = NumDigits * 10u + ((unsigned)c - '0');
 396:RTT/SEGGER_RTT_printf.c ****         } while (1);
 397:RTT/SEGGER_RTT_printf.c ****       }
 398:RTT/SEGGER_RTT_printf.c ****       //
 399:RTT/SEGGER_RTT_printf.c ****       // Filter out length modifier
 400:RTT/SEGGER_RTT_printf.c ****       //
 401:RTT/SEGGER_RTT_printf.c ****       c = *sFormat;
 778              		.loc 1 401 7 is_stmt 1 view .LVU259
 779              		.loc 1 401 9 is_stmt 0 view .LVU260
 780 00ae 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 781              	.LVL74:
 782              		.loc 1 401 9 view .LVU261
 783 00b0 13E0     		b	.L69
 784              	.LVL75:
 785              	.L87:
 388:RTT/SEGGER_RTT_printf.c ****         sFormat++;
 786              		.loc 1 388 9 is_stmt 1 view .LVU262
 388:RTT/SEGGER_RTT_printf.c ****         sFormat++;
ARM GAS  C:\Users\alronman\AppData\Local\Temp\ccOnPspb.s 			page 23


 787              		.loc 1 388 16 is_stmt 0 view .LVU263
 788 00b2 0134     		adds	r4, r4, #1
 789              	.LVL76:
 385:RTT/SEGGER_RTT_printf.c ****       c = *sFormat;
 790              		.loc 1 385 17 view .LVU264
 791 00b4 0023     		movs	r3, #0
 792              	.LVL77:
 385:RTT/SEGGER_RTT_printf.c ****       c = *sFormat;
 793              		.loc 1 385 17 view .LVU265
 794 00b6 05E0     		b	.L66
 795              	.LVL78:
 796              	.L88:
 394:RTT/SEGGER_RTT_printf.c ****           NumDigits = NumDigits * 10u + ((unsigned)c - '0');
 797              		.loc 1 394 11 is_stmt 1 view .LVU266
 394:RTT/SEGGER_RTT_printf.c ****           NumDigits = NumDigits * 10u + ((unsigned)c - '0');
 798              		.loc 1 394 18 is_stmt 0 view .LVU267
 799 00b8 0134     		adds	r4, r4, #1
 800              	.LVL79:
 395:RTT/SEGGER_RTT_printf.c ****         } while (1);
 801              		.loc 1 395 11 is_stmt 1 view .LVU268
 395:RTT/SEGGER_RTT_printf.c ****         } while (1);
 802              		.loc 1 395 33 is_stmt 0 view .LVU269
 803 00ba 03EB8303 		add	r3, r3, r3, lsl #2
 804              	.LVL80:
 395:RTT/SEGGER_RTT_printf.c ****         } while (1);
 805              		.loc 1 395 39 view .LVU270
 806 00be 01EB4303 		add	r3, r1, r3, lsl #1
 395:RTT/SEGGER_RTT_printf.c ****         } while (1);
 807              		.loc 1 395 21 view .LVU271
 808 00c2 303B     		subs	r3, r3, #48
 809              	.LVL81:
 396:RTT/SEGGER_RTT_printf.c ****       }
 810              		.loc 1 396 17 is_stmt 1 view .LVU272
 811              	.L66:
 389:RTT/SEGGER_RTT_printf.c ****           c = *sFormat;
 812              		.loc 1 389 9 view .LVU273
 390:RTT/SEGGER_RTT_printf.c ****           if ((c < '0') || (c > '9')) {
 813              		.loc 1 390 11 view .LVU274
 390:RTT/SEGGER_RTT_printf.c ****           if ((c < '0') || (c > '9')) {
 814              		.loc 1 390 13 is_stmt 0 view .LVU275
 815 00c4 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 816              	.LVL82:
 391:RTT/SEGGER_RTT_printf.c ****             break;
 817              		.loc 1 391 11 is_stmt 1 view .LVU276
 391:RTT/SEGGER_RTT_printf.c ****             break;
 818              		.loc 1 391 25 is_stmt 0 view .LVU277
 819 00c6 A1F1300C 		sub	ip, r1, #48
 820 00ca 5FFA8CFC 		uxtb	ip, ip
 391:RTT/SEGGER_RTT_printf.c ****             break;
 821              		.loc 1 391 14 view .LVU278
 822 00ce BCF1090F 		cmp	ip, #9
 823 00d2 F1D9     		bls	.L88
 391:RTT/SEGGER_RTT_printf.c ****             break;
 824              		.loc 1 391 14 view .LVU279
 825 00d4 EBE7     		b	.L65
 826              	.L67:
 402:RTT/SEGGER_RTT_printf.c ****       do {
ARM GAS  C:\Users\alronman\AppData\Local\Temp\ccOnPspb.s 			page 24


 403:RTT/SEGGER_RTT_printf.c ****         if ((c == 'l') || (c == 'h')) {
 404:RTT/SEGGER_RTT_printf.c ****           sFormat++;
 827              		.loc 1 404 11 is_stmt 1 view .LVU280
 828              	.LVL83:
 405:RTT/SEGGER_RTT_printf.c ****           c = *sFormat;
 829              		.loc 1 405 11 view .LVU281
 830              		.loc 1 405 13 is_stmt 0 view .LVU282
 831 00d6 14F8011F 		ldrb	r1, [r4, #1]!	@ zero_extendqisi2
 832              	.LVL84:
 406:RTT/SEGGER_RTT_printf.c ****         } else {
 407:RTT/SEGGER_RTT_printf.c ****           break;
 408:RTT/SEGGER_RTT_printf.c ****         }
 409:RTT/SEGGER_RTT_printf.c ****       } while (1);
 833              		.loc 1 409 15 is_stmt 1 view .LVU283
 834              	.L69:
 402:RTT/SEGGER_RTT_printf.c ****         if ((c == 'l') || (c == 'h')) {
 835              		.loc 1 402 7 view .LVU284
 403:RTT/SEGGER_RTT_printf.c ****           sFormat++;
 836              		.loc 1 403 9 view .LVU285
 403:RTT/SEGGER_RTT_printf.c ****           sFormat++;
 837              		.loc 1 403 12 is_stmt 0 view .LVU286
 838 00da 6C29     		cmp	r1, #108
 839 00dc FBD0     		beq	.L67
 403:RTT/SEGGER_RTT_printf.c ****           sFormat++;
 840              		.loc 1 403 24 discriminator 1 view .LVU287
 841 00de 6829     		cmp	r1, #104
 842 00e0 F9D0     		beq	.L67
 410:RTT/SEGGER_RTT_printf.c ****       //
 411:RTT/SEGGER_RTT_printf.c ****       // Handle specifiers
 412:RTT/SEGGER_RTT_printf.c ****       //
 413:RTT/SEGGER_RTT_printf.c ****       switch (c) {
 843              		.loc 1 413 7 is_stmt 1 view .LVU288
 844 00e2 2529     		cmp	r1, #37
 845 00e4 6DD0     		beq	.L70
 846 00e6 20D3     		bcc	.L71
 847 00e8 7829     		cmp	r1, #120
 848 00ea 1ED8     		bhi	.L71
 849 00ec 5829     		cmp	r1, #88
 850 00ee 1CD3     		bcc	.L71
 851 00f0 5839     		subs	r1, r1, #88
 852              	.LVL85:
 853              		.loc 1 413 7 is_stmt 0 view .LVU289
 854 00f2 2029     		cmp	r1, #32
 855 00f4 19D8     		bhi	.L71
 856 00f6 DFE801F0 		tbb	[pc, r1]
 857              	.L73:
 858 00fa 3D       		.byte	(.L72-.L73)/2
 859 00fb 18       		.byte	(.L71-.L73)/2
 860 00fc 18       		.byte	(.L71-.L73)/2
 861 00fd 18       		.byte	(.L71-.L73)/2
 862 00fe 18       		.byte	(.L71-.L73)/2
 863 00ff 18       		.byte	(.L71-.L73)/2
 864 0100 18       		.byte	(.L71-.L73)/2
 865 0101 18       		.byte	(.L71-.L73)/2
 866 0102 18       		.byte	(.L71-.L73)/2
 867 0103 18       		.byte	(.L71-.L73)/2
 868 0104 18       		.byte	(.L71-.L73)/2
ARM GAS  C:\Users\alronman\AppData\Local\Temp\ccOnPspb.s 			page 25


 869 0105 11       		.byte	(.L78-.L73)/2
 870 0106 27       		.byte	(.L77-.L73)/2
 871 0107 18       		.byte	(.L71-.L73)/2
 872 0108 18       		.byte	(.L71-.L73)/2
 873 0109 18       		.byte	(.L71-.L73)/2
 874 010a 18       		.byte	(.L71-.L73)/2
 875 010b 18       		.byte	(.L71-.L73)/2
 876 010c 18       		.byte	(.L71-.L73)/2
 877 010d 18       		.byte	(.L71-.L73)/2
 878 010e 18       		.byte	(.L71-.L73)/2
 879 010f 18       		.byte	(.L71-.L73)/2
 880 0110 18       		.byte	(.L71-.L73)/2
 881 0111 18       		.byte	(.L71-.L73)/2
 882 0112 57       		.byte	(.L76-.L73)/2
 883 0113 18       		.byte	(.L71-.L73)/2
 884 0114 18       		.byte	(.L71-.L73)/2
 885 0115 48       		.byte	(.L75-.L73)/2
 886 0116 18       		.byte	(.L71-.L73)/2
 887 0117 32       		.byte	(.L74-.L73)/2
 888 0118 18       		.byte	(.L71-.L73)/2
 889 0119 18       		.byte	(.L71-.L73)/2
 890 011a 3D       		.byte	(.L72-.L73)/2
 891 011b 00       		.p2align 1
 892              	.L78:
 893              	.LBB2:
 414:RTT/SEGGER_RTT_printf.c ****       case 'c': {
 415:RTT/SEGGER_RTT_printf.c ****         char c0;
 894              		.loc 1 415 9 is_stmt 1 view .LVU290
 416:RTT/SEGGER_RTT_printf.c ****         v = va_arg(*pParamList, int);
 895              		.loc 1 416 9 view .LVU291
 896              		.loc 1 416 11 is_stmt 0 view .LVU292
 897 011c 2B68     		ldr	r3, [r5]
 898              	.LVL86:
 899              		.loc 1 416 11 view .LVU293
 900 011e 1A1D     		adds	r2, r3, #4
 901              	.LVL87:
 902              		.loc 1 416 11 view .LVU294
 903 0120 2A60     		str	r2, [r5]
 417:RTT/SEGGER_RTT_printf.c ****         c0 = (char)v;
 904              		.loc 1 417 9 is_stmt 1 view .LVU295
 905              	.LVL88:
 418:RTT/SEGGER_RTT_printf.c ****         _StoreChar(&BufferDesc, c0);
 906              		.loc 1 418 9 view .LVU296
 907 0122 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 908 0124 13A8     		add	r0, sp, #76
 909              	.LVL89:
 910              		.loc 1 418 9 is_stmt 0 view .LVU297
 911 0126 FFF7FEFF 		bl	_StoreChar
 912              	.LVL90:
 419:RTT/SEGGER_RTT_printf.c ****         break;
 913              		.loc 1 419 9 is_stmt 1 view .LVU298
 914              	.L71:
 915              		.loc 1 419 9 is_stmt 0 view .LVU299
 916              	.LBE2:
 420:RTT/SEGGER_RTT_printf.c ****       }
 421:RTT/SEGGER_RTT_printf.c ****       case 'd':
 422:RTT/SEGGER_RTT_printf.c ****         v = va_arg(*pParamList, int);
ARM GAS  C:\Users\alronman\AppData\Local\Temp\ccOnPspb.s 			page 26


 423:RTT/SEGGER_RTT_printf.c ****         _PrintInt(&BufferDesc, v, 10u, NumDigits, FieldWidth, FormatFlags);
 424:RTT/SEGGER_RTT_printf.c ****         break;
 425:RTT/SEGGER_RTT_printf.c ****       case 'u':
 426:RTT/SEGGER_RTT_printf.c ****         v = va_arg(*pParamList, int);
 427:RTT/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 10u, NumDigits, FieldWidth, FormatFlags);
 428:RTT/SEGGER_RTT_printf.c ****         break;
 429:RTT/SEGGER_RTT_printf.c ****       case 'x':
 430:RTT/SEGGER_RTT_printf.c ****       case 'X':
 431:RTT/SEGGER_RTT_printf.c ****         v = va_arg(*pParamList, int);
 432:RTT/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 16u, NumDigits, FieldWidth, FormatFlags);
 433:RTT/SEGGER_RTT_printf.c ****         break;
 434:RTT/SEGGER_RTT_printf.c ****       case 's':
 435:RTT/SEGGER_RTT_printf.c ****         {
 436:RTT/SEGGER_RTT_printf.c ****           const char * s = va_arg(*pParamList, const char *);
 437:RTT/SEGGER_RTT_printf.c ****           do {
 438:RTT/SEGGER_RTT_printf.c ****             c = *s;
 439:RTT/SEGGER_RTT_printf.c ****             s++;
 440:RTT/SEGGER_RTT_printf.c ****             if (c == '\0') {
 441:RTT/SEGGER_RTT_printf.c ****               break;
 442:RTT/SEGGER_RTT_printf.c ****             }
 443:RTT/SEGGER_RTT_printf.c ****            _StoreChar(&BufferDesc, c);
 444:RTT/SEGGER_RTT_printf.c ****           } while (BufferDesc.ReturnValue >= 0);
 445:RTT/SEGGER_RTT_printf.c ****         }
 446:RTT/SEGGER_RTT_printf.c ****         break;
 447:RTT/SEGGER_RTT_printf.c ****       case 'p':
 448:RTT/SEGGER_RTT_printf.c ****         v = va_arg(*pParamList, int);
 449:RTT/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 16u, 8u, 8u, 0u);
 450:RTT/SEGGER_RTT_printf.c ****         break;
 451:RTT/SEGGER_RTT_printf.c ****       case '%':
 452:RTT/SEGGER_RTT_printf.c ****         _StoreChar(&BufferDesc, '%');
 453:RTT/SEGGER_RTT_printf.c ****         break;
 454:RTT/SEGGER_RTT_printf.c ****       default:
 455:RTT/SEGGER_RTT_printf.c ****         break;
 456:RTT/SEGGER_RTT_printf.c ****       }
 457:RTT/SEGGER_RTT_printf.c ****       sFormat++;
 917              		.loc 1 457 7 is_stmt 1 view .LVU300
 918              		.loc 1 457 14 is_stmt 0 view .LVU301
 919 012a 0134     		adds	r4, r4, #1
 920              	.LVL91:
 921              	.L80:
 458:RTT/SEGGER_RTT_printf.c ****     } else {
 459:RTT/SEGGER_RTT_printf.c ****       _StoreChar(&BufferDesc, c);
 460:RTT/SEGGER_RTT_printf.c ****     }
 461:RTT/SEGGER_RTT_printf.c ****   } while (BufferDesc.ReturnValue >= 0);
 922              		.loc 1 461 11 is_stmt 1 view .LVU302
 923              		.loc 1 461 22 is_stmt 0 view .LVU303
 924 012c 169B     		ldr	r3, [sp, #88]
 925              		.loc 1 461 3 view .LVU304
 926 012e 002B     		cmp	r3, #0
 927 0130 4CDB     		blt	.L54
 928              	.L81:
 347:RTT/SEGGER_RTT_printf.c ****     c = *sFormat;
 929              		.loc 1 347 3 is_stmt 1 view .LVU305
 348:RTT/SEGGER_RTT_printf.c ****     sFormat++;
 930              		.loc 1 348 5 view .LVU306
 348:RTT/SEGGER_RTT_printf.c ****     sFormat++;
 931              		.loc 1 348 7 is_stmt 0 view .LVU307
ARM GAS  C:\Users\alronman\AppData\Local\Temp\ccOnPspb.s 			page 27


 932 0132 14F8011B 		ldrb	r1, [r4], #1	@ zero_extendqisi2
 933              	.LVL92:
 349:RTT/SEGGER_RTT_printf.c ****     if (c == 0u) {
 934              		.loc 1 349 5 is_stmt 1 view .LVU308
 350:RTT/SEGGER_RTT_printf.c ****       break;
 935              		.loc 1 350 5 view .LVU309
 350:RTT/SEGGER_RTT_printf.c ****       break;
 936              		.loc 1 350 8 is_stmt 0 view .LVU310
 937 0136 0029     		cmp	r1, #0
 938 0138 48D0     		beq	.L54
 353:RTT/SEGGER_RTT_printf.c ****       //
 939              		.loc 1 353 5 is_stmt 1 view .LVU311
 353:RTT/SEGGER_RTT_printf.c ****       //
 940              		.loc 1 353 8 is_stmt 0 view .LVU312
 941 013a 2529     		cmp	r1, #37
 942 013c 3FF46EAF 		beq	.L89
 459:RTT/SEGGER_RTT_printf.c ****     }
 943              		.loc 1 459 7 is_stmt 1 view .LVU313
 944 0140 13A8     		add	r0, sp, #76
 945 0142 FFF7FEFF 		bl	_StoreChar
 946              	.LVL93:
 459:RTT/SEGGER_RTT_printf.c ****     }
 947              		.loc 1 459 7 is_stmt 0 view .LVU314
 948 0146 F1E7     		b	.L80
 949              	.LVL94:
 950              	.L77:
 422:RTT/SEGGER_RTT_printf.c ****         _PrintInt(&BufferDesc, v, 10u, NumDigits, FieldWidth, FormatFlags);
 951              		.loc 1 422 9 is_stmt 1 view .LVU315
 422:RTT/SEGGER_RTT_printf.c ****         _PrintInt(&BufferDesc, v, 10u, NumDigits, FieldWidth, FormatFlags);
 952              		.loc 1 422 11 is_stmt 0 view .LVU316
 953 0148 2968     		ldr	r1, [r5]
 954 014a 0F1D     		adds	r7, r1, #4
 955 014c 2F60     		str	r7, [r5]
 956 014e 0968     		ldr	r1, [r1]
 423:RTT/SEGGER_RTT_printf.c ****         break;
 957              		.loc 1 423 9 is_stmt 1 view .LVU317
 958 0150 0190     		str	r0, [sp, #4]
 959 0152 0092     		str	r2, [sp]
 960 0154 0A22     		movs	r2, #10
 961              	.LVL95:
 423:RTT/SEGGER_RTT_printf.c ****         break;
 962              		.loc 1 423 9 is_stmt 0 view .LVU318
 963 0156 13A8     		add	r0, sp, #76
 964              	.LVL96:
 423:RTT/SEGGER_RTT_printf.c ****         break;
 965              		.loc 1 423 9 view .LVU319
 966 0158 FFF7FEFF 		bl	_PrintInt
 967              	.LVL97:
 424:RTT/SEGGER_RTT_printf.c ****       case 'u':
 968              		.loc 1 424 9 is_stmt 1 view .LVU320
 969 015c E5E7     		b	.L71
 970              	.LVL98:
 971              	.L74:
 426:RTT/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 10u, NumDigits, FieldWidth, FormatFlags);
 972              		.loc 1 426 9 view .LVU321
 426:RTT/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 10u, NumDigits, FieldWidth, FormatFlags);
 973              		.loc 1 426 11 is_stmt 0 view .LVU322
ARM GAS  C:\Users\alronman\AppData\Local\Temp\ccOnPspb.s 			page 28


 974 015e 2968     		ldr	r1, [r5]
 975 0160 0F1D     		adds	r7, r1, #4
 976 0162 2F60     		str	r7, [r5]
 977 0164 0968     		ldr	r1, [r1]
 427:RTT/SEGGER_RTT_printf.c ****         break;
 978              		.loc 1 427 9 is_stmt 1 view .LVU323
 979 0166 0190     		str	r0, [sp, #4]
 980 0168 0092     		str	r2, [sp]
 981 016a 0A22     		movs	r2, #10
 982              	.LVL99:
 427:RTT/SEGGER_RTT_printf.c ****         break;
 983              		.loc 1 427 9 is_stmt 0 view .LVU324
 984 016c 13A8     		add	r0, sp, #76
 985              	.LVL100:
 427:RTT/SEGGER_RTT_printf.c ****         break;
 986              		.loc 1 427 9 view .LVU325
 987 016e FFF7FEFF 		bl	_PrintUnsigned
 988              	.LVL101:
 428:RTT/SEGGER_RTT_printf.c ****       case 'x':
 989              		.loc 1 428 9 is_stmt 1 view .LVU326
 990 0172 DAE7     		b	.L71
 991              	.LVL102:
 992              	.L72:
 431:RTT/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 16u, NumDigits, FieldWidth, FormatFlags);
 993              		.loc 1 431 9 view .LVU327
 431:RTT/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 16u, NumDigits, FieldWidth, FormatFlags);
 994              		.loc 1 431 11 is_stmt 0 view .LVU328
 995 0174 2968     		ldr	r1, [r5]
 996 0176 0F1D     		adds	r7, r1, #4
 997 0178 2F60     		str	r7, [r5]
 998 017a 0968     		ldr	r1, [r1]
 432:RTT/SEGGER_RTT_printf.c ****         break;
 999              		.loc 1 432 9 is_stmt 1 view .LVU329
 1000 017c 0190     		str	r0, [sp, #4]
 1001 017e 0092     		str	r2, [sp]
 1002 0180 1022     		movs	r2, #16
 1003              	.LVL103:
 432:RTT/SEGGER_RTT_printf.c ****         break;
 1004              		.loc 1 432 9 is_stmt 0 view .LVU330
 1005 0182 13A8     		add	r0, sp, #76
 1006              	.LVL104:
 432:RTT/SEGGER_RTT_printf.c ****         break;
 1007              		.loc 1 432 9 view .LVU331
 1008 0184 FFF7FEFF 		bl	_PrintUnsigned
 1009              	.LVL105:
 433:RTT/SEGGER_RTT_printf.c ****       case 's':
 1010              		.loc 1 433 9 is_stmt 1 view .LVU332
 1011 0188 CFE7     		b	.L71
 1012              	.LVL106:
 1013              	.L75:
 1014              	.LBB3:
 436:RTT/SEGGER_RTT_printf.c ****           do {
 1015              		.loc 1 436 11 view .LVU333
 436:RTT/SEGGER_RTT_printf.c ****           do {
 1016              		.loc 1 436 24 is_stmt 0 view .LVU334
 1017 018a 2B68     		ldr	r3, [r5]
 1018              	.LVL107:
ARM GAS  C:\Users\alronman\AppData\Local\Temp\ccOnPspb.s 			page 29


 436:RTT/SEGGER_RTT_printf.c ****           do {
 1019              		.loc 1 436 24 view .LVU335
 1020 018c 1A1D     		adds	r2, r3, #4
 1021              	.LVL108:
 436:RTT/SEGGER_RTT_printf.c ****           do {
 1022              		.loc 1 436 24 view .LVU336
 1023 018e 2A60     		str	r2, [r5]
 1024 0190 1F68     		ldr	r7, [r3]
 1025              	.LVL109:
 1026              	.L79:
 437:RTT/SEGGER_RTT_printf.c ****             c = *s;
 1027              		.loc 1 437 11 is_stmt 1 view .LVU337
 438:RTT/SEGGER_RTT_printf.c ****             s++;
 1028              		.loc 1 438 13 view .LVU338
 438:RTT/SEGGER_RTT_printf.c ****             s++;
 1029              		.loc 1 438 15 is_stmt 0 view .LVU339
 1030 0192 17F8011B 		ldrb	r1, [r7], #1	@ zero_extendqisi2
 1031              	.LVL110:
 439:RTT/SEGGER_RTT_printf.c ****             if (c == '\0') {
 1032              		.loc 1 439 13 is_stmt 1 view .LVU340
 440:RTT/SEGGER_RTT_printf.c ****               break;
 1033              		.loc 1 440 13 view .LVU341
 440:RTT/SEGGER_RTT_printf.c ****               break;
 1034              		.loc 1 440 16 is_stmt 0 view .LVU342
 1035 0196 0029     		cmp	r1, #0
 1036 0198 C7D0     		beq	.L71
 443:RTT/SEGGER_RTT_printf.c ****           } while (BufferDesc.ReturnValue >= 0);
 1037              		.loc 1 443 12 is_stmt 1 view .LVU343
 1038 019a 13A8     		add	r0, sp, #76
 1039 019c FFF7FEFF 		bl	_StoreChar
 1040              	.LVL111:
 444:RTT/SEGGER_RTT_printf.c ****         }
 1041              		.loc 1 444 19 view .LVU344
 444:RTT/SEGGER_RTT_printf.c ****         }
 1042              		.loc 1 444 30 is_stmt 0 view .LVU345
 1043 01a0 169B     		ldr	r3, [sp, #88]
 444:RTT/SEGGER_RTT_printf.c ****         }
 1044              		.loc 1 444 11 view .LVU346
 1045 01a2 002B     		cmp	r3, #0
 1046 01a4 F5DA     		bge	.L79
 1047 01a6 C0E7     		b	.L71
 1048              	.LVL112:
 1049              	.L76:
 444:RTT/SEGGER_RTT_printf.c ****         }
 1050              		.loc 1 444 11 view .LVU347
 1051              	.LBE3:
 448:RTT/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 16u, 8u, 8u, 0u);
 1052              		.loc 1 448 9 is_stmt 1 view .LVU348
 448:RTT/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 16u, 8u, 8u, 0u);
 1053              		.loc 1 448 11 is_stmt 0 view .LVU349
 1054 01a8 2B68     		ldr	r3, [r5]
 1055              	.LVL113:
 448:RTT/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 16u, 8u, 8u, 0u);
 1056              		.loc 1 448 11 view .LVU350
 1057 01aa 1A1D     		adds	r2, r3, #4
 1058              	.LVL114:
 448:RTT/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 16u, 8u, 8u, 0u);
ARM GAS  C:\Users\alronman\AppData\Local\Temp\ccOnPspb.s 			page 30


 1059              		.loc 1 448 11 view .LVU351
 1060 01ac 2A60     		str	r2, [r5]
 1061 01ae 1968     		ldr	r1, [r3]
 449:RTT/SEGGER_RTT_printf.c ****         break;
 1062              		.loc 1 449 9 is_stmt 1 view .LVU352
 1063 01b0 0023     		movs	r3, #0
 1064 01b2 0193     		str	r3, [sp, #4]
 1065 01b4 0823     		movs	r3, #8
 1066 01b6 0093     		str	r3, [sp]
 1067 01b8 1022     		movs	r2, #16
 1068 01ba 13A8     		add	r0, sp, #76
 1069              	.LVL115:
 449:RTT/SEGGER_RTT_printf.c ****         break;
 1070              		.loc 1 449 9 is_stmt 0 view .LVU353
 1071 01bc FFF7FEFF 		bl	_PrintUnsigned
 1072              	.LVL116:
 450:RTT/SEGGER_RTT_printf.c ****       case '%':
 1073              		.loc 1 450 9 is_stmt 1 view .LVU354
 1074 01c0 B3E7     		b	.L71
 1075              	.LVL117:
 1076              	.L70:
 452:RTT/SEGGER_RTT_printf.c ****         break;
 1077              		.loc 1 452 9 view .LVU355
 1078 01c2 2521     		movs	r1, #37
 1079              	.LVL118:
 452:RTT/SEGGER_RTT_printf.c ****         break;
 1080              		.loc 1 452 9 is_stmt 0 view .LVU356
 1081 01c4 13A8     		add	r0, sp, #76
 1082              	.LVL119:
 452:RTT/SEGGER_RTT_printf.c ****         break;
 1083              		.loc 1 452 9 view .LVU357
 1084 01c6 FFF7FEFF 		bl	_StoreChar
 1085              	.LVL120:
 453:RTT/SEGGER_RTT_printf.c ****       default:
 1086              		.loc 1 453 9 is_stmt 1 view .LVU358
 1087 01ca AEE7     		b	.L71
 1088              	.L54:
 462:RTT/SEGGER_RTT_printf.c **** 
 463:RTT/SEGGER_RTT_printf.c ****   if (BufferDesc.ReturnValue > 0) {
 1089              		.loc 1 463 3 view .LVU359
 1090              		.loc 1 463 17 is_stmt 0 view .LVU360
 1091 01cc 169B     		ldr	r3, [sp, #88]
 1092              		.loc 1 463 6 view .LVU361
 1093 01ce 002B     		cmp	r3, #0
 1094 01d0 05DD     		ble	.L82
 464:RTT/SEGGER_RTT_printf.c ****     //
 465:RTT/SEGGER_RTT_printf.c ****     // Write remaining data, if any
 466:RTT/SEGGER_RTT_printf.c ****     //
 467:RTT/SEGGER_RTT_printf.c ****     if (BufferDesc.Cnt != 0u) {
 1095              		.loc 1 467 5 is_stmt 1 view .LVU362
 1096              		.loc 1 467 19 is_stmt 0 view .LVU363
 1097 01d2 159A     		ldr	r2, [sp, #84]
 1098              		.loc 1 467 8 view .LVU364
 1099 01d4 32B9     		cbnz	r2, .L90
 1100              	.L83:
 468:RTT/SEGGER_RTT_printf.c ****       SEGGER_RTT_Write(BufferIndex, acBuffer, BufferDesc.Cnt);
 469:RTT/SEGGER_RTT_printf.c ****     }
ARM GAS  C:\Users\alronman\AppData\Local\Temp\ccOnPspb.s 			page 31


 470:RTT/SEGGER_RTT_printf.c ****     BufferDesc.ReturnValue += (int)BufferDesc.Cnt;
 1101              		.loc 1 470 5 is_stmt 1 view .LVU365
 1102              		.loc 1 470 28 is_stmt 0 view .LVU366
 1103 01d6 159A     		ldr	r2, [sp, #84]
 1104 01d8 169B     		ldr	r3, [sp, #88]
 1105 01da 1344     		add	r3, r3, r2
 1106 01dc 1693     		str	r3, [sp, #88]
 1107              	.L82:
 471:RTT/SEGGER_RTT_printf.c ****   }
 472:RTT/SEGGER_RTT_printf.c ****   return BufferDesc.ReturnValue;
 1108              		.loc 1 472 3 is_stmt 1 view .LVU367
 473:RTT/SEGGER_RTT_printf.c **** }
 1109              		.loc 1 473 1 is_stmt 0 view .LVU368
 1110 01de 1698     		ldr	r0, [sp, #88]
 1111 01e0 19B0     		add	sp, sp, #100
 1112              	.LCFI8:
 1113              		.cfi_remember_state
 1114              		.cfi_def_cfa_offset 20
 1115              		@ sp needed
 1116 01e2 F0BD     		pop	{r4, r5, r6, r7, pc}
 1117              	.LVL121:
 1118              	.L90:
 1119              	.LCFI9:
 1120              		.cfi_restore_state
 468:RTT/SEGGER_RTT_printf.c ****       SEGGER_RTT_Write(BufferIndex, acBuffer, BufferDesc.Cnt);
 1121              		.loc 1 468 7 is_stmt 1 view .LVU369
 1122 01e4 03A9     		add	r1, sp, #12
 1123 01e6 3046     		mov	r0, r6
 1124 01e8 FFF7FEFF 		bl	SEGGER_RTT_Write
 1125              	.LVL122:
 1126 01ec F3E7     		b	.L83
 1127              		.cfi_endproc
 1128              	.LFE3:
 1130 01ee 00BF     		.section	.text.SEGGER_RTT_printf,"ax",%progbits
 1131              		.align	1
 1132              		.global	SEGGER_RTT_printf
 1133              		.syntax unified
 1134              		.thumb
 1135              		.thumb_func
 1136              		.fpu fpv4-sp-d16
 1138              	SEGGER_RTT_printf:
 1139              	.LVL123:
 1140              	.LFB4:
 474:RTT/SEGGER_RTT_printf.c **** 
 475:RTT/SEGGER_RTT_printf.c **** /*********************************************************************
 476:RTT/SEGGER_RTT_printf.c **** *
 477:RTT/SEGGER_RTT_printf.c **** *       SEGGER_RTT_printf
 478:RTT/SEGGER_RTT_printf.c **** *
 479:RTT/SEGGER_RTT_printf.c **** *  Function description
 480:RTT/SEGGER_RTT_printf.c **** *    Stores a formatted string in SEGGER RTT control block.
 481:RTT/SEGGER_RTT_printf.c **** *    This data is read by the host.
 482:RTT/SEGGER_RTT_printf.c **** *
 483:RTT/SEGGER_RTT_printf.c **** *  Parameters
 484:RTT/SEGGER_RTT_printf.c **** *    BufferIndex  Index of "Up"-buffer to be used. (e.g. 0 for "Terminal")
 485:RTT/SEGGER_RTT_printf.c **** *    sFormat      Pointer to format string, followed by the arguments for conversion
 486:RTT/SEGGER_RTT_printf.c **** *
 487:RTT/SEGGER_RTT_printf.c **** *  Return values
ARM GAS  C:\Users\alronman\AppData\Local\Temp\ccOnPspb.s 			page 32


 488:RTT/SEGGER_RTT_printf.c **** *    >= 0:  Number of bytes which have been stored in the "Up"-buffer.
 489:RTT/SEGGER_RTT_printf.c **** *     < 0:  Error
 490:RTT/SEGGER_RTT_printf.c **** *
 491:RTT/SEGGER_RTT_printf.c **** *  Notes
 492:RTT/SEGGER_RTT_printf.c **** *    (1) Conversion specifications have following syntax:
 493:RTT/SEGGER_RTT_printf.c **** *          %[flags][FieldWidth][.Precision]ConversionSpecifier
 494:RTT/SEGGER_RTT_printf.c **** *    (2) Supported flags:
 495:RTT/SEGGER_RTT_printf.c **** *          -: Left justify within the field width
 496:RTT/SEGGER_RTT_printf.c **** *          +: Always print sign extension for signed conversions
 497:RTT/SEGGER_RTT_printf.c **** *          0: Pad with 0 instead of spaces. Ignored when using '-'-flag or precision
 498:RTT/SEGGER_RTT_printf.c **** *        Supported conversion specifiers:
 499:RTT/SEGGER_RTT_printf.c **** *          c: Print the argument as one char
 500:RTT/SEGGER_RTT_printf.c **** *          d: Print the argument as a signed integer
 501:RTT/SEGGER_RTT_printf.c **** *          u: Print the argument as an unsigned integer
 502:RTT/SEGGER_RTT_printf.c **** *          x: Print the argument as an hexadecimal integer
 503:RTT/SEGGER_RTT_printf.c **** *          s: Print the string pointed to by the argument
 504:RTT/SEGGER_RTT_printf.c **** *          p: Print the argument as an 8-digit hexadecimal integer. (Argument shall be a pointer to
 505:RTT/SEGGER_RTT_printf.c **** */
 506:RTT/SEGGER_RTT_printf.c **** int SEGGER_RTT_printf(unsigned BufferIndex, const char * sFormat, ...) {
 1141              		.loc 1 506 72 view -0
 1142              		.cfi_startproc
 1143              		@ args = 4, pretend = 12, frame = 8
 1144              		@ frame_needed = 0, uses_anonymous_args = 1
 1145              		.loc 1 506 72 is_stmt 0 view .LVU371
 1146 0000 0EB4     		push	{r1, r2, r3}
 1147              	.LCFI10:
 1148              		.cfi_def_cfa_offset 12
 1149              		.cfi_offset 1, -12
 1150              		.cfi_offset 2, -8
 1151              		.cfi_offset 3, -4
 1152 0002 00B5     		push	{lr}
 1153              	.LCFI11:
 1154              		.cfi_def_cfa_offset 16
 1155              		.cfi_offset 14, -16
 1156 0004 82B0     		sub	sp, sp, #8
 1157              	.LCFI12:
 1158              		.cfi_def_cfa_offset 24
 1159 0006 03AB     		add	r3, sp, #12
 1160 0008 53F8041B 		ldr	r1, [r3], #4
 507:RTT/SEGGER_RTT_printf.c ****   int r;
 1161              		.loc 1 507 3 is_stmt 1 view .LVU372
 508:RTT/SEGGER_RTT_printf.c ****   va_list ParamList;
 1162              		.loc 1 508 3 view .LVU373
 509:RTT/SEGGER_RTT_printf.c **** 
 510:RTT/SEGGER_RTT_printf.c ****   va_start(ParamList, sFormat);
 1163              		.loc 1 510 3 view .LVU374
 1164 000c 0193     		str	r3, [sp, #4]
 511:RTT/SEGGER_RTT_printf.c ****   r = SEGGER_RTT_vprintf(BufferIndex, sFormat, &ParamList);
 1165              		.loc 1 511 3 view .LVU375
 1166              		.loc 1 511 7 is_stmt 0 view .LVU376
 1167 000e 01AA     		add	r2, sp, #4
 1168 0010 FFF7FEFF 		bl	SEGGER_RTT_vprintf
 1169              	.LVL124:
 512:RTT/SEGGER_RTT_printf.c ****   va_end(ParamList);
 1170              		.loc 1 512 3 is_stmt 1 view .LVU377
 513:RTT/SEGGER_RTT_printf.c ****   return r;
 1171              		.loc 1 513 3 view .LVU378
ARM GAS  C:\Users\alronman\AppData\Local\Temp\ccOnPspb.s 			page 33


 514:RTT/SEGGER_RTT_printf.c **** }
 1172              		.loc 1 514 1 is_stmt 0 view .LVU379
 1173 0014 02B0     		add	sp, sp, #8
 1174              	.LCFI13:
 1175              		.cfi_def_cfa_offset 16
 1176              		@ sp needed
 1177 0016 5DF804EB 		ldr	lr, [sp], #4
 1178              	.LCFI14:
 1179              		.cfi_restore 14
 1180              		.cfi_def_cfa_offset 12
 1181 001a 03B0     		add	sp, sp, #12
 1182              	.LCFI15:
 1183              		.cfi_restore 3
 1184              		.cfi_restore 2
 1185              		.cfi_restore 1
 1186              		.cfi_def_cfa_offset 0
 1187 001c 7047     		bx	lr
 1188              		.cfi_endproc
 1189              	.LFE4:
 1191              		.section	.rodata._aV2C.0,"a"
 1192              		.align	2
 1193              		.set	.LANCHOR0,. + 0
 1196              	_aV2C.0:
 1197 0000 30313233 		.ascii	"0123456789ABCDEF"
 1197      34353637 
 1197      38394142 
 1197      43444546 
 1198              		.text
 1199              	.Letext0:
 1200              		.file 2 "d:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.07\\lib\\gcc\\arm-none-eabi\
 1201              		.file 3 "<built-in>"
 1202              		.file 4 "RTT/SEGGER_RTT.h"
ARM GAS  C:\Users\alronman\AppData\Local\Temp\ccOnPspb.s 			page 34


DEFINED SYMBOLS
                            *ABS*:00000000 SEGGER_RTT_printf.c
C:\Users\alronman\AppData\Local\Temp\ccOnPspb.s:18     .text._StoreChar:00000000 $t
C:\Users\alronman\AppData\Local\Temp\ccOnPspb.s:25     .text._StoreChar:00000000 _StoreChar
C:\Users\alronman\AppData\Local\Temp\ccOnPspb.s:113    .text._PrintUnsigned:00000000 $t
C:\Users\alronman\AppData\Local\Temp\ccOnPspb.s:119    .text._PrintUnsigned:00000000 _PrintUnsigned
C:\Users\alronman\AppData\Local\Temp\ccOnPspb.s:345    .text._PrintUnsigned:000000dc $d
C:\Users\alronman\AppData\Local\Temp\ccOnPspb.s:350    .text._PrintInt:00000000 $t
C:\Users\alronman\AppData\Local\Temp\ccOnPspb.s:356    .text._PrintInt:00000000 _PrintInt
C:\Users\alronman\AppData\Local\Temp\ccOnPspb.s:584    .text.SEGGER_RTT_vprintf:00000000 $t
C:\Users\alronman\AppData\Local\Temp\ccOnPspb.s:591    .text.SEGGER_RTT_vprintf:00000000 SEGGER_RTT_vprintf
C:\Users\alronman\AppData\Local\Temp\ccOnPspb.s:720    .text.SEGGER_RTT_vprintf:00000054 $d
C:\Users\alronman\AppData\Local\Temp\ccOnPspb.s:735    .text.SEGGER_RTT_vprintf:0000008c $t
C:\Users\alronman\AppData\Local\Temp\ccOnPspb.s:858    .text.SEGGER_RTT_vprintf:000000fa $d
C:\Users\alronman\AppData\Local\Temp\ccOnPspb.s:1131   .text.SEGGER_RTT_printf:00000000 $t
C:\Users\alronman\AppData\Local\Temp\ccOnPspb.s:1138   .text.SEGGER_RTT_printf:00000000 SEGGER_RTT_printf
C:\Users\alronman\AppData\Local\Temp\ccOnPspb.s:1192   .rodata._aV2C.0:00000000 $d
C:\Users\alronman\AppData\Local\Temp\ccOnPspb.s:1196   .rodata._aV2C.0:00000000 _aV2C.0
C:\Users\alronman\AppData\Local\Temp\ccOnPspb.s:891    .text.SEGGER_RTT_vprintf:0000011b $d
C:\Users\alronman\AppData\Local\Temp\ccOnPspb.s:891    .text.SEGGER_RTT_vprintf:0000011c $t

UNDEFINED SYMBOLS
SEGGER_RTT_Write
